{
	"folder_history":
	[
		"/C/Users/przem/Projects/Double-Pendulum",
		"/C/Users/przem/Projects/rust/rwm",
		"/?wsl$/Ubuntu-20.04/home/przemo/Projects/rust/orst",
		"/C/tools/msys64/home/przem/.ssh",
		"/C/Users/przem/Projects/rust/wcolor",
		"/C/Users/przem/Projects/rust/wasm-game-of-life",
		"//wsl$/Ubuntu-20.04/home/przemo/Projects/car_crash",
		"/C/Users/przem/OneDrive/Dokumente/dieta",
		"/C/Users/przem/Projects/rust/grpc-demo-tonic",
		"/C/Users/PrzemyslawPorebski/Projects/scanfeld-pylib",
		"/C/Users/PrzemyslawPorebski/Projects/sentinel",
		"/C/Users/przem/Projects/rust/InputBot",
		"/C/Users/przem/Projects/rust/wmm",
		"/C/Users/przem/AppData/Roaming/Sublime Text 3",
		"/C/Users/przem/AppData/Roaming/Sublime Text 3/Packages/User",
		"/C/Users/przem/Projects/rust/detect_key_press",
		"/C/tools/msys64/home/przem/.config/fish",
		"/C/tools/Cmder/config",
		"/C/Users/przem/Projects/rust/rwm_windows",
		"/C/Users/przem/Projects/dotfiles",
		"/C/Users/przem/Projects/rust/window_resizer",
		"/C/Users/przem/Projects/rust/samples-rs",
		"/C/Users/przem/Projects/rwm",
		"/C/Users/przem/Projects/Mateusz/MMwGK",
		"/C/Users/przem/Projects/Mateusz/glfw",
		"/C/Users/przem/Projects/Mateusz/glfw/build",
		"/C/Users/przem/Projects/Mateusz/modern_template",
		"/C/Users/przem/Projects/Mateusz/coscoscos",
		"/C/Users/przem/Projects/Switcheroo",
		"/C/Users/przem/Projects/car_crash",
		"/C/Users/przem/.ssh",
		"/C/Users/przem/Projects/cpp/PlotJuggler",
		"/C/Users/przem/Projects/Mateusz/coscoscos/zad1NC/Template1",
		"/C/Users/przem/Downloads/Triangle",
		"/C/Users/przem/Projects/rust/systray-rs",
		"/C/Users/przem/Projects/rust/systray-rs-test-app",
		"/C/Users/przem/Projects/cpp/rwm",
		"/C/Users/przem/Projects/rwm/cpp",
		"/C/Users/PrzemyslawPorebski/Projects/sentinel/gui",
		"/C/Users/przem/Projects/rust/piston-examples",
		"/C/Users/przem/Projects/rust/tic_tac_toe",
		"/C/tools/msys64/home/przem/Projects",
		"/C/Users/przem/Projects/cpp/godot",
		"/C/tools/msys64/home/przem/Projects/temp",
		"/C/Users/przem/Projects/rust/snake_AndrewJakubowicz",
		"/C/Users/PrzemyslawPorebski/Projects/builds/sentinel",
		"/C/Users/przem/Projects/rust/servo",
		"/C/Users/przem/Projects/dotfiles/windows",
		"/C/Users/przem/Projects/cpp/game_of_life",
		"/C/Users/przem/Projects/rust/html5ever_example",
		"/C/Users/przem/Projects/html5ever",
		"/C/Documents and Settings/przem/Projects/rust/snake_AndrewJakubowicz",
		"/C/tools/YouCompleteMe",
		"/C/Users/przem/Projects/rust/dupa",
		"/C/Users/PrzemyslawPorebski/.cargo",
		"/C/Users/przem/Google Drive/documents/Firefox",
		"/C/Users/PrzemyslawPorebski/Projects/testserver-configuration",
		"/C/Users/PrzemyslawPorebski/Projects/sentinel-pylib",
		"/C/Users/PrzemyslawPorebski/Projects/AqTimestamper",
		"/C/Users/PrzemyslawPorebski/Projects/hello_github_action",
		"/C/Users/PrzemyslawPorebski/Projects/HelloWorld",
		"/C/Users/PrzemyslawPorebski/Projects/test-ci",
		"/C/Users/PrzemyslawPorebski/Projects/builds/install/release",
		"/C/Users/PrzemyslawPorebski/Stuff/AI/src0",
		"/C/Users/PrzemyslawPorebski/Projects/dotfiles",
		"/C/Users/PrzemyslawPorebski/Projects/sentinel/vcpkg",
		"/C/Users/PrzemyslawPorebski/AppData/Roaming/Mozilla/Firefox/Profiles/0l0u20c6.default-release-1-1596097373267/chrome",
		"/C/Users/PrzemyslawPorebski/Projects/rust-sfml",
		"/C/Users/PrzemyslawPorebski/Stuff/tmp/MicrosoftTerminalSettings",
		"/C/Users/PrzemyslawPorebski/Projects/sentinel_tmp",
		"/C/Users/PrzemyslawPorebski/Projects/mlcourse.ai",
		"/C/Users/PrzemyslawPorebski/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.4/cores/esp32",
		"/C/Users/PrzemyslawPorebski/Projects/arduino",
		"/C/Users/PrzemyslawPorebski/Projects/arduino/DS18B20EventsSample.ino",
		"/C/Users/PrzemyslawPorebski/Documents/Arduino/libraries",
		"/C/Users/PrzemyslawPorebski/Projects/PycharmProjects/untitled",
		"/C/Users/PrzemyslawPorebski/Projects/tutorials/neutral_network",
		"/C/Users/PrzemyslawPorebski/AppData/Local/Temp/multiarrayserver",
		"/C/Users/PrzemyslawPorebski/Stuff/Mateusz",
		"/C/Users/PrzemyslawPorebski/Projects/tmp/hello_world",
		"/C/Users/PrzemyslawPorebski/Stuff/Mateusz/nfa",
		"/C/Users/PrzemyslawPorebski/Projects/dotfiles/windows",
		"/C/Users/PrzemyslawPorebski/Projects/car_crash",
		"/C/Qt/5.14.2/Src",
		"/C/Users/PrzemyslawPorebski/Projects/opus-rs-alpha",
		"/C/Users/PrzemyslawPorebski/Projects/builds/sentinel-Qt_5_14_2_msvc2017_64-Debug",
		"/C/Users/PrzemyslawPorebski/Projects/test_data/old_implementation_test_data",
		"/C/Users/PrzemyslawPorebski/Stuff/tmp",
		"/C/Users/PrzemyslawPorebski/Stuff/start_without_ui",
		"/C/Users/PrzemyslawPorebski/Projects/fresh/sentinel",
		"/C/tools/vcpkg",
		"/C/Users/PrzemyslawPorebski/Projects/rust/snake/rust",
		"/C/Users/PrzemyslawPorebski/Projects/RE/Reverse_Engineering_for_Beginners",
		"/C/Users/PrzemyslawPorebski/Documents/książki/how2crack_+ORC",
		"/C/Users/PrzemyslawPorebski/Documents/książki/wc_hack",
		"/C/Users/PrzemyslawPorebski/Projects/opus-rs-testclient",
		"/C/Users/PrzemyslawPorebski/Projects/fmt",
		"/C/Qt/Examples/Qt-5.14.1/activeqt",
		"/C/Qt/Examples/Qt-5.14.1/activeqt/comapp",
		"/C/Users/PrzemyslawPorebski/Projects/builds/build-sentinel-Qt_5_14_1_msvc2017_64_babe5d-Debug",
		"/C/Qt/Examples/Qt-5.14.1",
		"/C/Users/PrzemyslawPorebski/Projects/recform",
		"/C/Users/PrzemyslawPorebski/Projects/vcpkg/packages",
		"/C/Users/PrzemyslawPorebski/Projects/vcpkg/packages/grpc_x64-windows",
		"/C/Users/PrzemyslawPorebski/Projects/vcpkg/installed/x64-windows",
		"/C/Users/PrzemyslawPorebski/Projects/vcpkg/buildtrees/grpc",
		"/C/Users/PrzemyslawPorebski/Projects/vcpkg/buildtrees/protobuf/x86-windows-dbg/share/protobuf",
		"/C/Users/PrzemyslawPorebski/Projects/build-simple_widgee_app-Desktop_Qt_5_14_1_MSVC2017_64bit-Debug"
	],
	"last_version": 4107,
	"last_window_id": 506,
	"log_indexing": false,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 1518.0,
		"new_window_maximized": false,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"EventInter",
						"EventInterceptor"
					],
					[
						"Get",
						"GetLastError"
					],
					[
						"au",
						"AutoReboot\t⌬ tabnine"
					],
					[
						"pv",
						"pv_attribute\t⌬ tabnine"
					],
					[
						"prin",
						"println!(\"\t⌬ tabnine"
					],
					[
						"HRESULT",
						"HRESULT,\t⌬ tabnine"
					],
					[
						"is_",
						"is_hresult(\t⌬ tabnine"
					],
					[
						"Typ",
						"TypeId\t⌬ tabnine"
					],
					[
						"H",
						"HRESULT\t⌬ tabnine"
					],
					[
						"print",
						"println!(\"{:?}\", ret\t⌬ tabnine"
					],
					[
						"as_mut",
						"as_mut_ptr\t⌬ tabnine"
					],
					[
						"as_",
						"as_bytes());\t⌬ tabnine"
					],
					[
						"Parti",
						"PartialEq\t⌬ tabnine"
					],
					[
						"un",
						"unwrap"
					],
					[
						"into_",
						"into_owned\t⌬ tabnine"
					],
					[
						"str",
						"str =\t⌬ tabnine"
					],
					[
						"into",
						"into_raw\t⌬ tabnine"
					],
					[
						"title",
						"title_name_len\t⌬ tabnine"
					],
					[
						"er",
						"error\t⌬ tabnine"
					],
					[
						"unwrap_",
						"unwrap_or_else\t⌬ tabnine"
					],
					[
						"fr",
						"from_utf8(txt\t⌬ tabnine"
					],
					[
						"translate_pa",
						"translate_path_to_linux(sys.\t⌬ tabnine"
					],
					[
						"__",
						"__main__':\t⌬ tabnine"
					],
					[
						"replac",
						"replace(\"\\\\\", \"/\")\t⌬ tabnine"
					],
					[
						"initi",
						"initial_path = os.\t⌬ tabnine"
					],
					[
						"nul",
						"null_mut Function (mod.rs) : pub const fn null_mut<T>() -> *mut T"
					],
					[
						"siz",
						"size_of\t⌬ tabnine"
					],
					[
						"LPV",
						"LPVOID\t⌬ tabnine"
					],
					[
						"DWMWA_CLOAKED",
						"DWMWA_CLOAKED\t⌬ tabnine"
					],
					[
						"up",
						"upload_url"
					],
					[
						"uploa",
						"upload-artifact"
					],
					[
						"out",
						"outputs"
					],
					[
						"runs",
						"runs-on"
					],
					[
						"no",
						"nospace\t?"
					],
					[
						"las",
						"lastRow"
					],
					[
						"QSqlRe",
						"QSqlRelationalTableModel"
					],
					[
						"to",
						"toList"
					],
					[
						"CALIBRATION_HEATER_",
						"CALIBRATION_HEATER_TURNED_OFF_SETUP"
					],
					[
						"Alpha",
						"AlphaConnectionWorker"
					],
					[
						"AlphaC",
						"AlphaConnectionConfigTests"
					],
					[
						"CMAKE_CURR",
						"CMAKE_CURRENT_SOURCE_DIR"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/C++11/C++11.sublime-build",
							""
						],
						[
							"Packages/C++11/C++11.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++11/C++11.sublime-build",
						"Run"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"package up",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"rust run",
						"Build With: RustEnhanced - Run"
					],
					[
						"rust",
						"Build With: RustEnhanced - Run"
					],
					[
						"remove packa",
						"Package Control: Remove Package"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"origami des",
						"Origami: Destroy Current Pane"
					],
					[
						"open repo",
						"Sublime Merge: Open Repository"
					],
					[
						"right",
						"Origami: Create Pane with File on the Right"
					],
					[
						"list ",
						"Package Control: List Packages"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove ",
						"Package Control: Remove Package"
					],
					[
						"rain",
						"RainbowBrackets: make rainbow"
					],
					[
						"fmt",
						"RustFmt: Format Buffer"
					],
					[
						"below",
						"Origami: Create Pane Below"
					],
					[
						"neovi",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"synta",
						"Set Syntax: Python"
					],
					[
						"clang",
						"Clang Format: Select Style"
					],
					[
						"previe",
						"Markdown Preview: Preview in Browser"
					],
					[
						"format",
						"Clang Format: Select Style"
					],
					[
						"set syn c++",
						"Set Syntax: C++"
					],
					[
						"new ",
						"ANF: New File"
					],
					[
						"install pac",
						"Package Control: Install Package"
					],
					[
						"merge",
						"Sublime Merge: Open Repository"
					],
					[
						"remove",
						"Remove Selected Whitespace"
					],
					[
						"install ",
						"Package Control: Install Package"
					],
					[
						"rename",
						"Rename File"
					],
					[
						"copy",
						"Copy Filepath With Line Numbers"
					],
					[
						"blame",
						"Sublime Merge: Blame File"
					],
					[
						"open repos",
						"Sublime Merge: Open Repository"
					],
					[
						"open",
						"Sublime Merge: Open Repository"
					],
					[
						"sublime mer",
						"Sublime Merge: Open Repository"
					],
					[
						"json",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"set syntax json",
						"Set Syntax: JSON Key-Value"
					],
					[
						"isntall pac",
						"Package Control: Install Package"
					],
					[
						"install pack",
						"Package Control: Install Package"
					],
					[
						"list",
						"Package Control: List Packages"
					],
					[
						"you",
						"YouCompleteMe: Edit settings"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"theme",
						"Material Theme: Configuration"
					],
					[
						"toggle",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"syntac c++",
						"Set Syntax: C++11"
					],
					[
						"packages",
						"Package Control: List Packages"
					],
					[
						"set book",
						"SublimeBookmarks: Toggle Current Line"
					],
					[
						"repos",
						"Sublime Merge: Open Repository"
					],
					[
						"open rep",
						"Sublime Merge: Open Repository"
					],
					[
						"rena",
						"Rename File"
					],
					[
						"TabNine",
						"TabNine: Open Configuration"
					],
					[
						"tabnin",
						"TabNine: Open Configuration"
					],
					[
						"ocnifg",
						"TabNine: Open Configuration"
					],
					[
						"setting",
						"Preferences: Settings"
					],
					[
						"forma",
						"Clang Format: Format Selection"
					],
					[
						"remove paca",
						"Package Control: Remove Package"
					],
					[
						"install p",
						"Package Control: Install Package"
					],
					[
						"confi",
						"Material Theme: Configuration"
					],
					[
						"mat",
						"Material Theme: Activate theme"
					],
					[
						"rmeov",
						"Package Control: Remove Package"
					],
					[
						"intal",
						"Package Control: Install Package"
					],
					[
						"tab",
						"TabNine: Open Configuration"
					],
					[
						"list packa",
						"Package Control: List Packages"
					],
					[
						"neovin",
						"Toggle NeoVintageous"
					],
					[
						"renam",
						"Rename File"
					],
					[
						"copy r",
						"Copy Reference"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"renamee",
						"Rename File"
					],
					[
						"neo",
						"NeoVintageous: Changelog"
					],
					[
						"toggl",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"togg",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"to",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"open ",
						"Sublime Merge: Open Repository"
					],
					[
						"synta c",
						"Set Syntax: C"
					],
					[
						"tog",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"packa",
						"Package Control: Remove Package"
					],
					[
						"synta power",
						"Set Syntax: PowerShell"
					],
					[
						"mer open",
						"Sublime Merge: Open Repository"
					],
					[
						"isntall ",
						"Package Control: Advanced Install Package"
					],
					[
						"isntall pa",
						"Package Control: Install Package"
					],
					[
						"blame file",
						"Sublime Merge: Blame File"
					],
					[
						"toggle n",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"synt c++",
						"Set Syntax: C++"
					],
					[
						"toggle ",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"git blm",
						"Git: Blame"
					],
					[
						"install packa",
						"Package Control: Install Package"
					],
					[
						"isntall pack",
						"Package Control: Install Package"
					],
					[
						"rmeove packa",
						"Package Control: Remove Package"
					],
					[
						"ren",
						"Rename File"
					],
					[
						"keyb",
						"Preferences: Key Bindings"
					],
					[
						"copyname",
						"Copy Filepath With Line Numbers"
					],
					[
						"plan",
						"PlantUmlDiagrams: Continually Generate Diagram"
					],
					[
						"wra",
						"Word Wrap: Toggle"
					],
					[
						"wrap",
						"Word Wrap: Toggle"
					],
					[
						"package ",
						"Package Control: Remove Package"
					],
					[
						"cscop",
						"Cscope: Rebuild database"
					],
					[
						"toggle hex",
						"HexViewer: Toggle Hex View"
					],
					[
						"intall",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"isntall",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 368.0,
				"history":
				[
					"TabNine::version",
					"TabNine:version",
					"tabinene:version",
					"import os; [(os.path.dirname(file)[len('Packages/'):], sublime.decode_value(sublime.load_resource(file))['url']) for file in sublime.find_resources('package-metadata.json')]"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/C/Users/przem/Projects/rust/rwm/target/debug/build/bindings-d17650f45e4bd9cf/out/windows.rs",
				"/C/Users/przem/Projects/rust/rwm/bindings/build.rs",
				"/C/Users/przem/AppData/Local/Packages/Microsoft.WindowsTerminalPreview_8wekyb3d8bbwe/LocalState/settings.json",
				"/C/Users/przem/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1",
				"/C/Users/przem/Desktop/New Text Document.json",
				"/C/Users/przem/Projects/rust/rwm/src/winapi_wrapper.rs",
				"/C/Users/przem/Projects/rust/rwm/target/debug/build/bindings-13028fb91a5ee5fc/out/windows.rs",
				"/C/Users/przem/Projects/rust/rwm/Cargo.toml",
				"/C/Users/przem/Projects/rust/rwm/bindings/Cargo.toml",
				"/C/Users/przem/Projects/rust/rwm/bindings/src/lib.rs",
				"/C/Users/przem/Projects/rust/rwm/src/tray_icon.rs",
				"/C/Users/przem/Projects/rust/rwm/src/main.rs",
				"/C/Users/przem/Projects/rust/rwm/bindings/target/debug/build/bindings-a57180432aa194db/out/windows.rs",
				"/C/Users/przem/Projects/dotfiles/windows/update.ps1",
				"/C/Users/przem/Projects/rust/rwm/.github/workflows/rust.yml",
				"/C/Users/przem/OneDrive/Dokumente/dieta/lista_zakupów_do_środy.txt",
				"/C/Users/przem/OneDrive/Dokumente/dieta/lista_zakupów_od_środy.txt",
				"/c/Users/przem/Projects/rust/rwm/target/debug/build/bindings-0b5290a4e1d76f8e/out/windows.rs",
				"/C/Users/przem/.cargo/registry/src/github.com-1ecc6299db9ec823/windows-0.8.0/src/lib.rs",
				"/C/Users/przem/.rustup/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/src/rust/library/core/src/convert/mod.rs",
				"/C/Users/przem/.rustup/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/src/rust/library/core/src/mem/mod.rs",
				"/C/Users/przem/Projects/rust/rwm/target/debug/build/bindings-0b5290a4e1d76f8e/out/windows.rs",
				"/C/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/dwmapi.h",
				"/C/Users/przem/.neovintageousrc",
				"/C/Users/przem/AppData/Roaming/Mozilla/Firefox/Profiles/sueea553.default-release/chrome/userChrome.css",
				"/C/Users/przem/Google Drive/documents/Firefox/OneTab.exported",
				"/C/Users/przem/Projects/rwm/cpp/build/qml/main.qml",
				"/C/Users/przem/Projects/rwm/src/main.rs",
				"/C/Users/przem/Projects/rwm/cpp/main.cpp",
				"/C/ProgramData/chocolatey/lib/gstreamer-devel/gstreamer-devel.nuspec",
				"/C/ProgramData/chocolatey/logs/chocolatey.log",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.clang-format",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.github/workflows/continuous_integration.yml",
				"/C/Users/PrzemyslawPorebski/Downloads/Program.txt",
				"/C/Users/PrzemyslawPorebski/Downloads/Rozmowa.cmd",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/ComClient.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/Sentinel.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/ComClient.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/ComClient-internal.h",
				"/C/Users/PrzemyslawPorebski/AppData/Local/Grandperspective/Sentinel/sentinel.settings.json",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/alpha_access/AlphaConnectionTests.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/gtags.files",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaConnection.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaConnection.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaStatemachine.scxml",
				"/C/Users/PrzemyslawPorebski/Projects/dotfiles/windows/build_gtags.cmd",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/vcpkg.txt",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/CTags/Default.sublime-keymap",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/Sentinel.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/qmlExtracted/main.qml",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaHttpDriver.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/GigECamera.cpp",
				"/C/Users/PrzemyslawPorebski/AppData/Local/Packages/Microsoft.WindowsTerminalPreview_8wekyb3d8bbwe/LocalState/settings.json",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/DatabaseConnection.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Scan.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Toxel.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/CMakeLists.txt",
				"//wsl$/Ubuntu-20.04/home/przemo/Projects/26158053.1",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.gitignore",
				"/C/Users/PrzemyslawPorebski/Projects/hello_github_action/.github/workflows/cmake.yml",
				"/C/Users/PrzemyslawPorebski/Projects/HelloWorld/.github/workflows/build_cmake.yml",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Merge/Packages/User/Default (Windows).sublime-keymap",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanArea.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanArea.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanAreaContainer.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanAreaContainer.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/DatabaseConnection.h",
				"/C/Users/PrzemyslawPorebski/Projects/builds/install/release/opusRsTimesFile.log",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/User/clang_format.sublime-settings",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/Clang Format/clang_format.sublime-settings",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/Clang Format/Default (Windows).sublime-keymap",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/CameraControl.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/CameraControl.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/builds/install/release/opusRsTimesFile",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuControl-internal.h",
				"//wsl$/kali-linux/home/przemo/.vimrc",
				"//wsl$/Ubuntu-20.04/home/przemo/.config/nvim/init.vim",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/modules/PtuControlTest.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuDriver.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/CMakeLists.txt.user",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/sentinel-fluent-bit-dev/Readme.md",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuControl.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuControl.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Spectrum.cpp",
				"/C/Users/PrzemyslawPorebski/PycharmProjects/pythonProject/main.py",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/TimestampToxelCollator.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/AqTimestamper.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/AqTimestamper.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Spectrum.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/model/PtuPositionsContainerTest.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/PtuPositionsContainer.cpp",
				"/C/Users/PrzemyslawPorebski/Documents/n53sv_Przemek.rdp",
				"/C/Users/PrzemyslawPorebski/Documents/PowerShell/Microsoft.PowerShell_profile.ps1",
				"/C/Users/PrzemyslawPorebski/_vimrc",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/PtuPositionsContainer.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/qmlExtracted/PtuControl.qml",
				"/C/Users/PrzemyslawPorebski/Projects/mlcourse.ai/run_docker_jupyter_windows.cmd",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/jsonstruct/Timestamp.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/presenter/ScanProxy.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/presenter/ScanProxy.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanBackground.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanBackground.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Toxel.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Scan.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/MsTimestamp.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/MsTimestamp.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/qmlExtracted/SidebarDirectControl.qml",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/Sentinel_AlphaConnectino_coordination.txt",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/helpers/TimeConversion.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/dotfiles/NordVPN_Polish_servers.txt",
				"/C/Users/PrzemyslawPorebski/Stuff/LassPass.csv",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/SentinelTest.cpp",
				"/C/Users/PrzemyslawPorebski/AppData/Local/Grandperspective/Sentinel/subl",
				"/C/Users/PrzemyslawPorebski/Projects/opus-rs-testclient/Unit1.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/opus-rs-alpha/OpagIFM.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/ProjectionTest.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaCalibrationData.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaCalibrationData.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/dotfiles/windows/choco_local.list",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/GeDetekt.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/vcpkg/buildtrees/opencv4/src/4.1.1-fb9e10326a/modules/core/src/matrix.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.gitbugtraq",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/sentinel.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr27.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr19.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr22.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr13.log"
			],
			"find":
			{
				"height": 24.0
			},
			"find_in_files":
			{
				"height": 136.0,
				"where_history":
				[
					"C:\\Users\\przem\\Projects\\rust\\rwm",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"C:\\\\Users\\\\%USERNAME%",
					"register_keyboard_clicks",
					"buf1",
					"HRESULT",
					"Windows::Win32::",
					"Waiting on message",
					"Waiting on message!",
					"Waiting on message!\nerror: process",
					"buf",
					"MA_NOACTIVATE",
					"        ",
					"GetClassNameA"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": true,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 24.0
			},
			"input":
			{
				"height": 55.0
			},
			"menu_visible": false,
			"output.ECC":
			{
				"height": 334.0
			},
			"output.exec":
			{
				"height": 390.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.hex_viewer_inspector":
			{
				"height": 103.0
			},
			"output.unsaved_changes":
			{
				"height": 324.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 44.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"winap",
						"src\\winapi_wrapper.rs"
					],
					[
						"window",
						"target\\debug\\build\\bindings-d17650f45e4bd9cf\\out\\windows.rs"
					],
					[
						"windows.rs",
						"target\\debug\\build\\bindings-d17650f45e4bd9cf\\out\\windows.rs"
					],
					[
						"win",
						"src\\winapi_wrapper.rs"
					],
					[
						"tray",
						"src\\tray_icon.rs"
					],
					[
						"main.rs",
						"src\\main.rs"
					],
					[
						"",
						".clang-format"
					],
					[
						"comclien",
						"modules\\ComClient.h"
					],
					[
						"gitign",
						".gitignore"
					],
					[
						"client",
						"modules\\ComClient.cpp"
					],
					[
						"cam",
						"modules\\GigECamera.cpp"
					],
					[
						"readm",
						"sentinel-fluent-bit-dev\\Readme.md"
					],
					[
						"cmake",
						"CMakeLists.txt"
					],
					[
						"ptuconto",
						"modules\\PtuControl.cpp"
					],
					[
						"ptucontte",
						"unitTests\\modules\\PtuControlTest.cpp"
					],
					[
						"ptudriver",
						"modules\\PtuDriver.cpp"
					],
					[
						"comclient",
						"modules\\ComClient.cpp"
					],
					[
						"PtuControl",
						"modules\\PtuControl.h"
					],
					[
						"ptucon",
						"modules\\PtuControl.h"
					],
					[
						"unitTests/model/PtuPositionsContainerTest.cpp",
						"unitTests\\model\\PtuPositionsContainerTest.cpp"
					],
					[
						"ptu",
						"modules\\PtuControl.h"
					],
					[
						"alpha",
						"alpha_access\\AlphaConnection.cpp"
					],
					[
						"aqtim",
						"modules\\AqTimestamper.cpp"
					],
					[
						"aqtime",
						"modules\\AqTimestamper.cpp"
					],
					[
						"time",
						"helpers\\TimeConversion.cpp"
					],
					[
						"com",
						"modules\\ComClient.cpp"
					],
					[
						"sentinelTest",
						"unitTests\\SentinelTest.cpp"
					],
					[
						"comclie in",
						"modules\\ComClient-internal.h"
					],
					[
						"comclie",
						"modules\\ComClient.cpp"
					],
					[
						"alpha test",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"alphatest",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"http",
						"alpha_access\\AlphaHttpDriver.cpp"
					],
					[
						"gedete",
						"modules\\GeDetekt.cpp"
					],
					[
						"comclientin",
						"modules\\ComClient-internal.h"
					],
					[
						"comcli",
						"modules\\ComClient.cpp"
					],
					[
						"gede",
						"modules\\GeDetekt.cpp"
					],
					[
						"pha_access/AlphaConnectionTests.cpp ",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"AlphaStatemachine.scxml",
						"alpha_access\\AlphaStatemachine.scxml"
					],
					[
						"sentine",
						"Sentinel.cpp"
					],
					[
						"comclient_te",
						"integrationTests\\ComClient_test.cpp"
					],
					[
						"AlphaConnection.cpp",
						"alpha_access\\AlphaConnection.cpp"
					],
					[
						"AlphaConnectionTe.",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"AlphaStatemachine.scxml ",
						"alpha_access\\AlphaStatemachine.scxml"
					],
					[
						"comclien inte",
						"modules\\ComClient-internal.h"
					],
					[
						"alphacali",
						"alpha_access\\AlphaCalibrationData.h"
					],
					[
						"ab",
						"alpha_access\\AbstractAlphaConnection.h"
					],
					[
						"AlphaConnectionTests.cpp",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"gigecam",
						"modules\\GigECamera.cpp"
					],
					[
						"ge",
						"modules\\GeDetekt.cpp"
					],
					[
						"drivermock",
						"commonTest\\mocks\\AlphaHttpDriverMock.h"
					],
					[
						"alphaconn test",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"alphacon",
						"alpha_access\\AlphaConnection.cpp"
					],
					[
						"alphahtt test",
						"unitTests\\alpha_access\\AlphaHttpDriverTests.cpp"
					],
					[
						"alphahttp",
						"alpha_access\\AlphaHttpDriver.cpp"
					],
					[
						"alphahtt",
						"alpha_access\\AlphaHttpDriver.cpp"
					],
					[
						"Toxel_DatabaseTest.cpp",
						"integrationTests\\Toxel_DatabaseTest.cpp"
					],
					[
						"GeDetektToxel.h",
						"data\\GeDetektToxel.h"
					],
					[
						"model/toxe",
						"model\\Toxel.cpp"
					],
					[
						"GeDetekt.cpp",
						"modules\\GeDetekt.cpp"
					],
					[
						"unitTests/alpha_access/AlphaConnectionTests.cpp",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"unitTests/alpha_access/AlphaConnectionHttpPagesReplies.h",
						"unitTests\\alpha_access\\AlphaConnectionHttpPagesReplies.h"
					],
					[
						"unitTests/alpha_access/AlphaConnectionConfigTests.cpp",
						"unitTests\\alpha_access\\AlphaConnectionConfigTests.cpp"
					],
					[
						"modules/ComClient.cpp",
						"modules\\ComClient.cpp"
					],
					[
						"modules/AqTimestamper.cpp",
						"modules\\AqTimestamper.cpp"
					],
					[
						"integrationTests/AlphaConnectionComClient_Test.cpp",
						"integrationTests\\AlphaConnectionComClient_Test.cpp"
					],
					[
						"commonTest/mocks/AlphaConnectionMock.h",
						"commonTest\\mocks\\AlphaConnectionMock.h"
					],
					[
						"alpha_access/AlphaConnectionConfig.cpp",
						"alpha_access\\AlphaConnectionConfig.cpp"
					],
					[
						"AlphaConnection",
						"alpha_access\\AlphaConnection.h"
					],
					[
						"NetworkAccessManagerMock.cpp",
						"unitTests\\mocks\\NetworkAccessManagerMock.cpp"
					],
					[
						"test-main.cpp",
						"test-main.cpp"
					],
					[
						"gie",
						"modules\\GigECamera.cpp"
					],
					[
						"AbstractNetworkAccessManager.h",
						"alpha_access\\AbstractNetworkAccessManager.h"
					],
					[
						"AlphaConnectionConfig.h",
						"alpha_access\\AlphaConnectionConfig.h"
					],
					[
						"comclient-inte",
						"modules\\ComClient-internal.h"
					],
					[
						"gicam",
						"modules\\GigECamera.cpp"
					],
					[
						"ComClient.cpp",
						"modules\\ComClient.cpp"
					],
					[
						"ComClient-internal.h",
						"modules\\ComClient-internal.h"
					],
					[
						"GeDetekt.h",
						"modules\\GeDetekt.h"
					],
					[
						"ComClient_test.cpp",
						"integrationTests\\ComClient_test.cpp"
					],
					[
						"alpha_access/IQNetworkReplyWrapper.h",
						"alpha_access\\IQNetworkReplyWrapper.h"
					],
					[
						"unitTests\\AlphaConnectionTests.cpp",
						"alpha_access\\unitTests\\AlphaConnectionTests.cpp"
					],
					[
						"ComClient.h",
						"modules\\ComClient.h"
					],
					[
						"DatabaseConnection.cpp",
						"modules\\DatabaseConnection.cpp"
					],
					[
						"gedetect",
						"alpha_access\\GeDetekt.cpp"
					],
					[
						"camera",
						"modules\\GigECamera.cpp"
					],
					[
						"SafeArrayAccess.cpp",
						"helpers\\SafeArrayAccess.cpp"
					],
					[
						"dedetekt",
						"modules\\GeDetekt.h"
					],
					[
						"SpherePosition.h",
						"model\\SpherePosition.h"
					],
					[
						"sentinelstatemachine",
						"SentinelStateMachine.scxml"
					],
					[
						"QNetworkAccessManagerDummyMock.h",
						"alpha_access\\unitTests\\mocks\\QNetworkAccessManagerDummyMock.h"
					],
					[
						"iqnet",
						"alpha_access\\IQNetworkAccessManagerWrapper.h"
					],
					[
						"alpha_access\\AlphaConnection.cpp",
						"alpha_access\\AlphaConnection.cpp"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"C:\\Users\\przem\\OneDrive\\Dokumente\\dieta\\lista_zakupów.sublime-project"
					],
					[
						"sen",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel.sublime-project"
					],
					[
						"entin",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel.sublime-project"
					],
					[
						"rwm",
						"C:\\Users\\przem\\Projects\\sublime_projects\\rwm.sublime-project"
					],
					[
						"test",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\testserver-configuration.sublime-project"
					],
					[
						"pyli",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel-pylib.sublime-project"
					],
					[
						"pylib",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel-pylib.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 91.0,
				"last_filter": "savetodb",
				"selected_items":
				[
					[
						"savetodb",
						"saveToDb"
					],
					[
						"calibrateWithCollectedData",
						"calibrateWithCollectedData"
					],
					[
						"calibrationDataCollected ",
						"calibrationDataCollected"
					],
					[
						"calibrationDataCollected",
						"calibrationDataCollected"
					],
					[
						"dump",
						"dumpMeasurementData"
					],
					[
						"isMeasurementFull",
						"isMeasurementFull"
					],
					[
						"blackbody",
						"requestReadBlackbodyPosition"
					],
					[
						"isclo",
						"isDoubleClose"
					],
					[
						"startComClient",
						"startComClient"
					],
					[
						"startge",
						"startGeDetekt"
					],
					[
						"returnif",
						"ReturnIfmIp"
					],
					[
						"gedete",
						"GeDetekt"
					]
				],
				"width": 574.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 206.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1918.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"EventInter",
						"EventInterceptor"
					],
					[
						"Get",
						"GetLastError"
					],
					[
						"au",
						"AutoReboot\t⌬ tabnine"
					],
					[
						"pv",
						"pv_attribute\t⌬ tabnine"
					],
					[
						"prin",
						"println!(\"\t⌬ tabnine"
					],
					[
						"HRESULT",
						"HRESULT,\t⌬ tabnine"
					],
					[
						"is_",
						"is_hresult(\t⌬ tabnine"
					],
					[
						"Typ",
						"TypeId\t⌬ tabnine"
					],
					[
						"H",
						"HRESULT\t⌬ tabnine"
					],
					[
						"print",
						"println!(\"{:?}\", ret\t⌬ tabnine"
					],
					[
						"as_mut",
						"as_mut_ptr\t⌬ tabnine"
					],
					[
						"as_",
						"as_bytes());\t⌬ tabnine"
					],
					[
						"Parti",
						"PartialEq\t⌬ tabnine"
					],
					[
						"un",
						"unwrap"
					],
					[
						"into_",
						"into_owned\t⌬ tabnine"
					],
					[
						"str",
						"str =\t⌬ tabnine"
					],
					[
						"into",
						"into_raw\t⌬ tabnine"
					],
					[
						"title",
						"title_name_len\t⌬ tabnine"
					],
					[
						"er",
						"error\t⌬ tabnine"
					],
					[
						"unwrap_",
						"unwrap_or_else\t⌬ tabnine"
					],
					[
						"fr",
						"from_utf8(txt\t⌬ tabnine"
					],
					[
						"translate_pa",
						"translate_path_to_linux(sys.\t⌬ tabnine"
					],
					[
						"__",
						"__main__':\t⌬ tabnine"
					],
					[
						"replac",
						"replace(\"\\\\\", \"/\")\t⌬ tabnine"
					],
					[
						"initi",
						"initial_path = os.\t⌬ tabnine"
					],
					[
						"nul",
						"null_mut Function (mod.rs) : pub const fn null_mut<T>() -> *mut T"
					],
					[
						"siz",
						"size_of\t⌬ tabnine"
					],
					[
						"LPV",
						"LPVOID\t⌬ tabnine"
					],
					[
						"DWMWA_CLOAKED",
						"DWMWA_CLOAKED\t⌬ tabnine"
					],
					[
						"up",
						"upload_url"
					],
					[
						"uploa",
						"upload-artifact"
					],
					[
						"out",
						"outputs"
					],
					[
						"runs",
						"runs-on"
					],
					[
						"no",
						"nospace\t?"
					],
					[
						"las",
						"lastRow"
					],
					[
						"QSqlRe",
						"QSqlRelationalTableModel"
					],
					[
						"to",
						"toList"
					],
					[
						"CALIBRATION_HEATER_",
						"CALIBRATION_HEATER_TURNED_OFF_SETUP"
					],
					[
						"Alpha",
						"AlphaConnectionWorker"
					],
					[
						"AlphaC",
						"AlphaConnectionConfigTests"
					],
					[
						"CMAKE_CURR",
						"CMAKE_CURRENT_SOURCE_DIR"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Users/przem/Projects/rust/rwm/src/main.rs",
					"settings":
					{
						"buffer_size": 228,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							11,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAOgAAAAAAAAA6wAAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
						],
						[
							25,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_e",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal"
									}
								},
								"register": "\""
							},
							"AQAAANQAAAAAAAAA1AAAAAAAAAAMAAAAbW91c2VfY2xpY2tz",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							27,
							1,
							"insert",
							{
								"characters": "events"
							},
							"BgAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAADZAAAAAAAAANoAAAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/"
						],
						[
							32,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_e",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal"
									}
								},
								"register": "\""
							},
							"AQAAAFcAAAAAAAAAVwAAAAAAAAAYAAAAcmVnaXN0ZXJfa2V5Ym9hcmRfY2xpY2tz",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
						],
						[
							40,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"insert",
										{
											"characters": "reti"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": "gi"
										}
									],
									[
										"insert_completion",
										{
											"completion": "register_mouse_clicks$0",
											"format": "snippet",
											"keep_prefix": false,
											"must_insert": false,
											"trigger": "register_mouse_clicks"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": "eve"
										}
									],
									[
										"insert_completion",
										{
											"completion": "register_events$0",
											"format": "snippet",
											"keep_prefix": false,
											"must_insert": false,
											"trigger": "register_events"
										}
									]
								]
							},
							"GwAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWgAAAAAAAABaAAAAAAAAAAEAAABpWQAAAAAAAABZAAAAAAAAAAEAAAB0WQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFcAAAAAAAAAVwAAAAAAAAAEAAAAcmVnaVcAAAAAAAAAbAAAAAAAAAAAAAAAawAAAAAAAABrAAAAAAAAAAEAAABzagAAAAAAAABqAAAAAAAAAAEAAABraQAAAAAAAABpAAAAAAAAAAEAAABjaAAAAAAAAABoAAAAAAAAAAEAAABpZwAAAAAAAABnAAAAAAAAAAEAAABsZgAAAAAAAABmAAAAAAAAAAEAAABjZQAAAAAAAABlAAAAAAAAAAEAAABfZAAAAAAAAABkAAAAAAAAAAEAAABlYwAAAAAAAABjAAAAAAAAAAEAAABzYgAAAAAAAABiAAAAAAAAAAEAAAB1YQAAAAAAAABhAAAAAAAAAAEAAABvYAAAAAAAAABgAAAAAAAAAAEAAABtYAAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAAAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAVwAAAAAAAABXAAAAAAAAAAwAAAByZWdpc3Rlcl9ldmVXAAAAAAAAAGYAAAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
						],
						[
							53,
							1,
							"nv_vi_dd",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAAGgAAAAAAAAAaAAAAAAAAAArAAAAdXNlIHdpbmFwaV93cmFwcGVyOjpyZWdpc3Rlcl9tb3VzZV9jbGlja3M7Cg",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"contents": "use std::mem;\nuse std::{sync::{Arc, atomic::{AtomicBool, Ordering}}, thread};\n\nuse windows::HRESULT;\n\nuse bindings::Windows::Win32::{\n    Graphics::Dwm::DwmGetWindowAttribute,\n    System::Diagnostics::Debug::{GetLastError, WIN32_ERROR},\n    System::StationsAndDesktops::{EnumDesktopWindows, GetThreadDesktop},\n    System::SystemServices::{BOOL, FALSE, HINSTANCE, LRESULT, PSTR, PWSTR, TRUE},\n    System::Threading::GetCurrentThreadId,\n    UI::DisplayDevices::{POINT, RECT},\n    UI::KeyboardAndMouseInput::GetAsyncKeyState,\n    UI::WindowsAndMessaging::*,\n};\n\nuse core::ffi::c_void;\n\nstruct EventInterceptor {\n\n}\n\n// static KEY_PRESSED: Arc<AtomicBool> = Arc::new(AtomicBool::new(false));\n\n\nextern \"system\" fn on_mouse_event(code: i32, w_param: WPARAM, l_param: LPARAM) -> LRESULT {\n    if code < 0 {\n        return unsafe { CallNextHookEx(HHOOK::default(), code, w_param, l_param) };\n    }\n\n    fn get_cursor_position() -> Result<(i32, i32), WIN32_ERROR> {\n        let mut p = POINT::default();\n        if unsafe { GetCursorPos(&mut p) == FALSE } {\n            return Err(unsafe { GetLastError() });\n        }\n\n        Ok((p.x, p.y))\n    }\n\n    match get_cursor_position() {\n        Ok((x, y)) => {\n            if w_param == WPARAM(WM_LBUTTONDOWN as usize) {\n                println!(\"Left mouse button pressed at position: <{},{}>\", x, y);\n\n                if unsafe { GetAsyncKeyState(VK_LCONTROL as i32) != 0 } {\n                    println!(\"Left control button pressed!\");\n                }\n\n                // let is_key_pressed = KEY_PRESSED.clone();\n\n               //   if is_key_pressed.load(Ordering::Relaxed) {\n               //       println!(\"Key pressed and button pressed!\");\n               //   }\n                // std::thread::sleep(Duration::from_millis(150));\n                // let hwnd = unsafe { GetForegroundWindow() };\n                // let title = get_window_title(hwnd);\n                // println!(\"{:?}\", title);\n            } else if w_param == WPARAM(WM_RBUTTONDOWN as usize) {\n                println!(\"Right mouse button pressed at position: <{},{}>\", x, y);\n                // } else if w_param == WPARAM(WM_MBUTTONDOWN) {\n                //     list_all_windows();\n            }\n        }\n        Err(err) => println!(\"Can't get mouse position. Error: {:?}\", err),\n    };\n\n    unsafe { CallNextHookEx(HHOOK::default(), code, w_param, l_param) }\n}\n\npub fn register_events() {\n    thread::spawn(move || {\n        let h_instance = HINSTANCE::default();\n        let hook = unsafe { SetWindowsHookExW(WH_MOUSE_LL, Some(on_mouse_event), h_instance, 0) };\n\n        println!(\"hook: {:?}\", hook);\n\n        if hook.is_null() {\n            println!(\"Can't set windows hook. Error: {:?}\", unsafe {\n                GetLastError()\n            });\n        }\n\n        unsafe { GetMessageW(&mut MSG::default(), HWND::default(), 0, 0) };\n\n        unsafe {\n            UnhookWindowsHookEx(hook);\n        }\n    });\n\n    thread::spawn(move || {\n        let h_instance = HINSTANCE::default();\n        let hook =\n            unsafe { SetWindowsHookExW(WH_KEYBOARD_LL, Some(on_keyboard_event), h_instance, 0) };\n\n        if hook.is_null() {\n            println!(\"Can't set windows hook. Error: {:?}\", unsafe {\n                GetLastError()\n            });\n        }\n\n        let mut msg = MSG::default();\n        let hwnd = HWND::default();\n        unsafe { GetMessageW(&mut msg, hwnd, 0, 0) };\n        println!(\"msg: {:?}\", msg);\n        println!(\"hwnd: {:?}\", hwnd);\n\n        unsafe {\n            UnhookWindowsHookEx(hook);\n        }\n    });\n}\n\nextern \"system\" fn on_keyboard_event(code: i32, w_param: WPARAM, l_param: LPARAM) -> LRESULT {\n    if code < 0 {\n        return unsafe { CallNextHookEx(HHOOK::default(), code, w_param, l_param) };\n    }\n\n    // let is_key_pressed = KEY_PRESSED.clone();\n\n    if w_param == WPARAM(WM_KEYDOWN as usize) {\n        println!(\"Key pressed! code={:?}, l_param={:?}\", code, l_param);\n        // todo: get key code\n        // let st = l_param.as_ptr() KBDLLHOOKSTRUCT;\n        // is_key_pressed.store(true, Ordering::Relaxed);\n    } else if w_param == WPARAM(WM_KEYUP as usize) {\n        // is_key_pressed.store(false, Ordering::Relaxed);\n        println!(\"Key up! code={:?}, l_param={:?}\", code, l_param);\n    } \n    unsafe { CallNextHookEx(HHOOK::default(), code, w_param, l_param) }\n}\n\n// todo: figure out how to catch keyboard events and mouse events to catch event: Win key + Left mouse button pressed.\n// pub fn register_keyboard_clicks() {\n//     thread::spawn(move || {\n//         let h_instance = HINSTANCE::default();\n//         let hook =\n//             unsafe { SetWindowsHookExW(WH_KEYBOARD_LL, Some(on_keyboard_event), h_instance, 0) };\n\n//         if hook.is_null() {\n//             println!(\"Can't set windows hook. Error: {:?}\", unsafe {\n//                 GetLastError()\n//             });\n//         }\n\n//         unsafe { GetMessageW(&mut MSG::default(), HWND::default(), 0, 0) };\n\n//         unsafe {\n//             UnhookWindowsHookEx(hook);\n//         }\n//     });\n// }\n\npub fn list_all_windows() {\n    unsafe {\n        EnumDesktopWindows(\n            GetThreadDesktop(GetCurrentThreadId()),\n            Some(enum_proc),\n            LPARAM(0),\n        );\n    }\n}\n\n#[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\nstruct Rect {\n    pub left: i32,\n    pub top: i32,\n    pub right: i32,\n    pub bottom: i32,\n}\n\nfn get_window_rect(hwnd: HWND) -> Result<Rect, String> {\n    let mut rect = RECT::default();\n    let got_rect = unsafe { GetWindowRect(hwnd, &mut rect) == TRUE };\n\n    if !got_rect {\n        return Err(format!(\"Can't get rect.\"));\n    }\n\n    Ok(Rect {\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n    })\n}\n\nfn is_alt_tab_window(hwnd: HWND) -> bool {\n    if !is_visible(hwnd) {\n        return false;\n    }\n\n    if is_iconic(hwnd) {\n        return false;\n    }\n\n    let window_title = get_window_title(hwnd);\n    if let Err(_) = window_title {\n        return false;\n    }\n\n    if is_core_window(hwnd) {\n        return false;\n    }\n\n    if is_app_window(hwnd) {\n        return true;\n    }\n\n    if is_tool_window(hwnd) {\n        return false;\n    }\n\n    if is_no_activate(hwnd) {\n        return false;\n    }\n\n    if has_i_task_list_deleted_property(hwnd) {\n        return false;\n    }\n\n    if is_application_frame_window(hwnd) {\n        if !has_appropriate_application_view_cloak_type(hwnd) {\n            return false;\n        };\n        if let Ok(_) = window_title {\n            return true;\n        }\n\n        return false;\n    }\n\n    let window_owner = get_window_owner(hwnd);\n    if let Some(wo) = window_owner {\n        if !is_visible(wo) {\n            return false;\n        }\n    }\n\n    true\n}\n\nfn is_visible(hwnd: HWND) -> bool {\n    unsafe { IsWindowVisible(hwnd) == TRUE }\n}\n\n#[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\nenum WindowError {\n    NotFound,\n}\n\nfn get_window_title(hwnd: HWND) -> Result<String, WindowError> {\n    const SIZE: usize = 128;\n    let mut buf = [0u16; SIZE];\n\n    let title_name_len = unsafe { GetWindowTextW(hwnd, PWSTR(buf.as_mut_ptr()), SIZE as i32) };\n    if title_name_len == 0 {\n        return Err(WindowError::NotFound);\n    }\n\n    let txt: Vec<u8> = buf.iter().map(|&c| c as u8).collect();\n    match String::from_utf8(txt.clone()) {\n        Ok(name) => Ok(format!(\"{}\", truncate(&name, title_name_len as usize))),\n        Err(_) => Ok(String::from_utf8_lossy(&txt).into_owned()),\n    }\n}\n\nfn is_core_window(hwnd: HWND) -> bool {\n    get_class_name(hwnd) == \"Windows.UI.Core.CoreWindow\".to_string()\n}\n\nfn is_application_frame_window(hwnd: HWND) -> bool {\n    get_class_name(hwnd) == \"ApplicationFrameWindow\".to_string()\n}\n\nfn has_appropriate_application_view_cloak_type(hwnd: HWND) -> bool {\n    match is_cloaked(hwnd) {\n        Ok(ok) => ok == 0,\n        Err(_) => false,\n    }\n}\n\nfn get_window_owner(hwnd: HWND) -> Option<HWND> {\n    let handle = unsafe { GetWindow(hwnd, GW_OWNER) };\n\n    if handle.is_null() {\n        return None;\n    }\n\n    Some(handle)\n}\n\nfn is_iconic(hwnd: HWND) -> bool {\n    unsafe { IsIconic(hwnd) == TRUE }\n}\n\nfn truncate(s: &str, max_chars: usize) -> &str {\n    match s.char_indices().nth(max_chars) {\n        None => s,\n        Some((idx, _)) => &s[..idx],\n    }\n}\n\nfn get_class_name(hwnd: HWND) -> String {\n    let mut class_name = String::new();\n    const SIZE: usize = 128;\n    let mut buf = [0u8; SIZE];\n    let class_name_len = unsafe { GetClassNameA(hwnd, PSTR(buf.as_mut_ptr()), SIZE as i32) };\n    if class_name_len > 0 {\n        let txt = buf.iter().map(|&c| c).collect();\n        class_name = String::from_utf8(txt).unwrap_or_else(|error| {\n            println!(\"Windows title error: {}\", error);\n            \"Incorrect window title!\".to_string()\n        });\n        class_name = String::from(truncate(&class_name, class_name_len as usize));\n    }\n    return class_name;\n}\n\nfn is_app_window(hwnd: HWND) -> bool {\n    let flag = unsafe { GetWindowLongPtrA(hwnd, GWL_EXSTYLE) };\n    let flag = WINDOW_EX_STYLE::from(flag as u32);\n    WS_EX_APPWINDOW == flag\n}\n\nfn is_tool_window(hwnd: HWND) -> bool {\n    let ex_style_flag = unsafe { GetWindowLongPtrA(hwnd, GWL_EXSTYLE) as u32 };\n    let mut ret = WINDOW_EX_STYLE::from(ex_style_flag) == WS_EX_TOOLWINDOW;\n    let style_flag = unsafe { GetWindowLongPtrA(hwnd, GWL_STYLE) as u32 };\n    ret |= WINDOW_EX_STYLE::from(style_flag) == WS_EX_TOOLWINDOW;\n\n    ret\n}\n\nfn is_no_activate(hwnd: HWND) -> bool {\n    let ex_style_flag = unsafe { GetWindowLongPtrA(hwnd, GWL_EXSTYLE) as u32 };\n    WINDOW_EX_STYLE::from(ex_style_flag) == WS_EX_NOACTIVATE\n}\n\nfn has_i_task_list_deleted_property(hwnd: HWND) -> bool {\n    let mut c_to_print = String::from(\"ITaskList_Deleted\");\n    let buf = PSTR(c_to_print.as_mut_ptr());\n    unsafe { !GetPropA(hwnd, buf).is_null() }\n}\n\nfn is_cloaked(hwnd: HWND) -> Result<i32, String> {\n    let mut pv_attribute = unsafe { mem::MaybeUninit::<i32>::zeroed().assume_init() };\n    let (ret, pv_attribute) = unsafe {\n        let ret = DwmGetWindowAttribute(\n            hwnd,\n            14u32,\n            &mut pv_attribute as *mut _ as *mut c_void,\n            mem::size_of::<u32>() as u32,\n        );\n        (ret, pv_attribute)\n    };\n\n    match ret {\n        HRESULT(0) => Ok(pv_attribute),\n        _ => Err(format!(\"Returned HRESULT: {:?}\", ret)), // an invalid handle, or type size for the given attribute?\n    }\n}\n\nextern \"system\" fn enum_proc(hwnd: HWND, _l_param: LPARAM) -> BOOL {\n    if is_alt_tab_window(hwnd) {\n        match get_window_title(hwnd) {\n            Ok(title) => {\n                let rect = get_window_rect(hwnd);\n                println!(\"-> {}, rect: {:?}\", title, rect)\n            }\n            Err(err) => {\n                println!(\"error: {:?}\", err)\n            }\n        };\n    }\n\n    TRUE\n}\n",
					"file": "/C/Users/przem/Projects/rust/rwm/src/winapi_wrapper.rs",
					"file_size": 11197,
					"file_write_time": 132679821390954215,
					"settings":
					{
						"buffer_size": 10851,
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							55,
							1,
							"nv_vi_o",
							{
								"count": 1,
								"mode": "mode_internal_normal"
							},
							"AgAAAPoKAAAAAAAA+woAAAAAAAAAAAAA+woAAAAAAAD/CgAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9woAAAAAAAD3CgAAAAAAAAAAAAAAAPC/"
						],
						[
							56,
							1,
							"nv_enter_normal_mode",
							{
								"mode": "mode_insert"
							},
							"AQAAAPsKAAAAAAAA+woAAAAAAAAEAAAAICAgIA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/woAAAAAAAD/CgAAAAAAAAAAAAAAAPC/"
						],
						[
							57,
							1,
							"nv_vi_o",
							{
								"count": 1,
								"mode": "mode_internal_normal"
							},
							"AgAAAPsKAAAAAAAA/AoAAAAAAAAAAAAA/AoAAAAAAAAACwAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+woAAAAAAAD7CgAAAAAAAAAAAAAAAPC/"
						],
						[
							58,
							1,
							"nv_enter_normal_mode",
							{
								"mode": "mode_insert"
							},
							"AQAAAPwKAAAAAAAA/AoAAAAAAAAEAAAAICAgIA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAPC/"
						],
						[
							59,
							1,
							"nv_vi_paste",
							{
								"before_cursor": false,
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAAP0KAAAAAAAA8AwAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AoAAAAAAAD8CgAAAAAAAAAAAAAAAPC/"
						],
						[
							61,
							1,
							"nv_vi_dd",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAAPwKAAAAAAAA/AoAAAAAAAABAAAACg",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AoAAAAAAAD8CgAAAAAAAAAAAAAAAPC/"
						],
						[
							71,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"EAAAACMSAAAAAAAAJhIAAAAAAAAAAAAAGxIAAAAAAAAeEgAAAAAAAAAAAAAREgAAAAAAABQSAAAAAAAAAAAAAOoRAAAAAAAA7REAAAAAAAAAAAAA2REAAAAAAADcEQAAAAAAAAAAAACMEQAAAAAAAI8RAAAAAAAAAAAAAIERAAAAAAAAhBEAAAAAAAAAAAAAcREAAAAAAAB0EQAAAAAAAAAAAABSEQAAAAAAAFURAAAAAAAAAAAAAA0RAAAAAAAAEBEAAAAAAAAAAAAA8RAAAAAAAAD0EAAAAAAAAAAAAACOEAAAAAAAAJEQAAAAAAAAAAAAAHsQAAAAAAAAfhAAAAAAAAAAAAAATBAAAAAAAABPEAAAAAAAAAAAAAAwEAAAAAAAADMQAAAAAAAAAAAAAAwQAAAAAAAADxAAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADBAAAAAAAAAmEgAAAAAAAAAAAAAAAPC/"
						],
						[
							114,
							1,
							"rust_fmt_format_buffer",
							null,
							"CQAAABcAAAAAAAAAFwAAAAAAAAAGAAAAdGhyZWFkFwAAAAAAAAAjAAAAAAAAAAAAAAAuAAAAAAAAAC4AAAAAAAAADAAAAHN5bmM6OmF0b21pYy4AAAAAAAAANAAAAAAAAAAAAAAAyAUAAAAAAADdBQAAAAAAAAAAAADkBQAAAAAAAPkFAAAAAAAAAAAAAAIGAAAAAAAAFwYAAAAAAAAAAAAAIwYAAAAAAAA4BgAAAAAAAAAAAABYBgAAAAAAAGgGAAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhAAAAAAAAAuEAAAAAAAAAAAAAAAAPC/"
						],
						[
							124,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_e",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal"
									}
								},
								"register": "\""
							},
							"AQAAAG0JAAAAAAAAbQkAAAAAAAAMAAAAbW91c2VfY2xpY2tz",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/"
						],
						[
							127,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"insert",
										{
											"characters": "eve"
										}
									],
									[
										"insert_completion",
										{
											"completion": "register_events$0",
											"format": "snippet",
											"keep_prefix": false,
											"must_insert": false,
											"trigger": "register_events"
										}
									]
								]
							},
							"BQAAAG0JAAAAAAAAbgkAAAAAAAAAAAAAbgkAAAAAAABvCQAAAAAAAAAAAABvCQAAAAAAAHAJAAAAAAAAAAAAAGQJAAAAAAAAZAkAAAAAAAAMAAAAcmVnaXN0ZXJfZXZlZAkAAAAAAABzCQAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/"
						],
						[
							148,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_j",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal",
										"xpos": 0
									}
								},
								"register": "\""
							},
							"AQAAAC8CAAAAAAAALwIAAAAAAABRAAAAc3RhdGljIG11dCBpc19rZXlfcHJlc3NlZDogYXRvbWljOjpBdG9taWNCb29sID0gYXRvbWljOjpBdG9taWNCb29sOjpuZXcoZmFsc2UpOwoK",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwIAAAAAAAAvAgAAAAAAAAAAAAAAAPC/"
						],
						[
							151,
							1,
							"nv_vi_o",
							{
								"count": 1,
								"mode": "mode_internal_normal"
							},
							"AgAAACYJAAAAAAAAJwkAAAAAAAAAAAAAJwkAAAAAAAArCQAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHAkAAAAAAAAcCQAAAAAAAAAAAAAAAPC/"
						],
						[
							152,
							1,
							"nv_enter_normal_mode",
							{
								"mode": "mode_insert"
							},
							"AQAAACcJAAAAAAAAJwkAAAAAAAAEAAAAICAgIA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwkAAAAAAAArCQAAAAAAAAAAAAAAAPC/"
						],
						[
							153,
							1,
							"nv_vi_o",
							{
								"count": 1,
								"mode": "mode_internal_normal"
							},
							"AgAAACcJAAAAAAAAKAkAAAAAAAAAAAAAKAkAAAAAAAAsCQAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJwkAAAAAAAAnCQAAAAAAAAAAAAAAAPC/"
						],
						[
							154,
							1,
							"nv_enter_normal_mode",
							{
								"mode": "mode_insert"
							},
							"AQAAACgJAAAAAAAAKAkAAAAAAAAEAAAAICAgIA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAkAAAAAAAAsCQAAAAAAAAAAAAAAAPC/"
						],
						[
							156,
							1,
							"nv_vi_o",
							{
								"count": 1,
								"mode": "mode_internal_normal"
							},
							"AgAAACcJAAAAAAAAKAkAAAAAAAAAAAAAKAkAAAAAAAAsCQAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJwkAAAAAAAAnCQAAAAAAAAAAAAAAAPC/"
						],
						[
							157,
							1,
							"nv_enter_normal_mode",
							{
								"mode": "mode_insert"
							},
							"AQAAACgJAAAAAAAAKAkAAAAAAAAEAAAAICAgIA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAkAAAAAAAAsCQAAAAAAAAAAAAAAAPC/"
						],
						[
							158,
							1,
							"nv_vi_paste",
							{
								"before_cursor": false,
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAACgJAAAAAAAAeQkAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAkAAAAAAAAoCQAAAAAAAAAAAAAAAPC/"
						],
						[
							162,
							1,
							"nv_vi_greater_than",
							{
								"count": 1,
								"mode": "mode_visual"
							},
							"AQAAACgJAAAAAAAALAkAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAkAAAAAAAApCQAAAAAAAAAAAAAAAPC/"
						],
						[
							166,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_e",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal"
									}
								},
								"register": "\""
							},
							"AQAAACwJAAAAAAAALAkAAAAAAAAGAAAAc3RhdGlj",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAkAAAAAAAAsCQAAAAAAAAAAAAAAAPC/"
						],
						[
							167,
							1,
							"nv_vi_x",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAACwJAAAAAAAALAkAAAAAAAABAAAAIA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAkAAAAAAAAsCQAAAAAAAAAAAAAAAPC/"
						],
						[
							170,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"insert",
										{
											"characters": "let"
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									]
								]
							},
							"BAAAACwJAAAAAAAALQkAAAAAAAAAAAAALQkAAAAAAAAuCQAAAAAAAAAAAAAuCQAAAAAAAC8JAAAAAAAAAAAAAC8JAAAAAAAAMAkAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAkAAAAAAAAsCQAAAAAAAAAAAAAAAPC/"
						],
						[
							179,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_find_in_line",
									"motion_args":
									{
										"char": "=",
										"count": 1,
										"inclusive": false,
										"mode": "mode_internal_normal"
									}
								},
								"register": "\""
							},
							"AQAAAEIJAAAAAAAAQgkAAAAAAAAVAAAAOiBhdG9taWM6OkF0b21pY0Jvb2wg",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgkAAAAAAABCCQAAAAAAAAAAAAAAAPC/"
						],
						[
							181,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAEIJAAAAAAAAQwkAAAAAAAAAAAAA",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgkAAAAAAABCCQAAAAAAAAAAAAAAAPC/"
						],
						[
							186,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_j",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal",
										"xpos": 26
									}
								},
								"register": "\""
							},
							"AQAAAGUJAAAAAAAAZQkAAAAAAAACAAAACgo",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQkAAAAAAABlCQAAAAAAAAAAAAAAAPC/"
						],
						[
							197,
							1,
							"rust_fmt_format_buffer",
							null,
							"AQAAACcJAAAAAAAAJwkAAAAAAAABAAAACg",
							"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAkAAAAAAAAoCQAAAAAAAAAAAAAAAPC/"
						],
						[
							76,
							1,
							"nv_vi_big_j",
							{
								"count": 1,
								"mode": "mode_internal_normal"
							},
							"AQAAAIkQAAAAAAAAixAAAAAAAAACAAAAfQo",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJEAAAAAAAAIkQAAAAAAAAAAAAAAAA8L8"
						],
						[
							91,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"nv_vi_o",
										{
											"count": 1,
											"mode": "mode_internal_normal"
										}
									],
									[
										"insert",
										{
											"characters": "struct"
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									],
									[
										"insert",
										{
											"characters": "even"
										}
									]
								]
							},
							"DAAAAEYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEkCAAAAAAAAAAAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAEwCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABOAgAAAAAAAAAAAABOAgAAAAAAAE8CAAAAAAAAAAAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAgAAAAAAAEYCAAAAAAAAAAAAAAAA8L8"
						],
						[
							97,
							1,
							"nv_vi_d",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"motion":
								{
									"motion": "nv_vi_b",
									"motion_args":
									{
										"count": 1,
										"mode": "mode_internal_normal"
									}
								},
								"register": "\""
							},
							"AQAAAE4CAAAAAAAATgIAAAAAAAADAAAAZXZl",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRAgAAAAAAAFECAAAAAAAAAAAAAAAA8L8"
						],
						[
							98,
							1,
							"nv_vi_x",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAAE4CAAAAAAAATgIAAAAAAAABAAAAbg",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAgAAAAAAAE4CAAAAAAAAAAAAAAAA8L8"
						],
						[
							111,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"nv_vi_a",
										{
											"count": 1,
											"mode": "mode_internal_normal"
										}
									],
									[
										"insert",
										{
											"characters": "EventInte"
										}
									],
									[
										"insert",
										{
											"characters": "r"
										}
									],
									[
										"insert_completion",
										{
											"completion": "EventInterceptor$0",
											"format": "snippet",
											"keep_prefix": false,
											"must_insert": false,
											"trigger": "EventInterceptor"
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									],
									[
										"insert_snippet",
										{
											"contents": "{$0}"
										}
									],
									[
										"run_macro_file",
										{
											"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
										}
									],
									[
										"unindent",
										null
									],
									[
										"insert",
										{
											"characters": "jla"
										}
									],
									[
										"insert",
										{
											"characters": "hh"
										}
									]
								]
							},
							"FwAAAE4CAAAAAAAATwIAAAAAAAAAAAAATwIAAAAAAABQAgAAAAAAAAAAAABQAgAAAAAAAFECAAAAAAAAAAAAAFECAAAAAAAAUgIAAAAAAAAAAAAAUgIAAAAAAABTAgAAAAAAAAAAAABTAgAAAAAAAFQCAAAAAAAAAAAAAFQCAAAAAAAAVQIAAAAAAAAAAAAAVQIAAAAAAABWAgAAAAAAAAAAAABWAgAAAAAAAFcCAAAAAAAAAAAAAFcCAAAAAAAAWAIAAAAAAAAAAAAATgIAAAAAAABOAgAAAAAAAAoAAABFdmVudEludGVyTgIAAAAAAABeAgAAAAAAAAAAAABeAgAAAAAAAF8CAAAAAAAAAAAAAF8CAAAAAAAAYQIAAAAAAAAAAAAAYAIAAAAAAABhAgAAAAAAAAAAAABhAgAAAAAAAGICAAAAAAAAAAAAAGECAAAAAAAAZQIAAAAAAAAAAAAAYQIAAAAAAABhAgAAAAAAAAQAAAAgICAgYQIAAAAAAABiAgAAAAAAAAAAAABiAgAAAAAAAGMCAAAAAAAAAAAAAGMCAAAAAAAAZAIAAAAAAAAAAAAAZAIAAAAAAABlAgAAAAAAAAAAAABlAgAAAAAAAGYCAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAgAAAAAAAE0CAAAAAAAAAAAAAAAA8L8"
						],
						[
							121,
							1,
							"nv_vi_dd",
							{
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAAGECAAAAAAAAYQIAAAAAAAAGAAAAamxhaGgK",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAgAAAAAAAGUCAAAAAAAAAAAAAAAA8L8"
						],
						[
							145,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"nv_vi_o",
										{
											"count": 1,
											"mode": "mode_internal_normal"
										}
									],
									[
										"unindent",
										null
									],
									[
										"unindent",
										null
									],
									[
										"unindent",
										null
									],
									[
										"unindent",
										null
									],
									[
										"unindent",
										null
									],
									[
										"unindent",
										null
									]
								]
							},
							"AwAAAGACAAAAAAAAYQIAAAAAAAAAAAAAYQIAAAAAAABlAgAAAAAAAAAAAABhAgAAAAAAAGECAAAAAAAABAAAACAgICA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAgAAAAAAAEcCAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"file": "/C/Users/przem/Projects/rust/rwm/src/tray_icon.rs",
					"settings":
					{
						"buffer_size": 1203,
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							10,
							1,
							"nv_vi_r",
							{
								"char": ">",
								"count": 1,
								"mode": "mode_internal_normal",
								"register": "\""
							},
							"AQAAAGMDAAAAAAAAZAMAAAAAAAABAAAAQQ",
							"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
						],
						[
							21,
							1,
							"revert",
							null,
							"AgAAAAAAAAAAAAAAAAAAAAAAAACzBAAAdXNlIGNyYXRlOjp3aW5hcGlfd3JhcHBlcjo6bGlzdF9hbGxfd2luZG93czsKCnB1YiBmbiBzaG93X3RyYXlfaWNvbigpIC0+IFJlc3VsdDwoKSwgc3lzdHJheTo6RXJyb3I+IHsKICAgIGxldCBtdXQgYXBwOwogICAgbWF0Y2ggc3lzdHJheTo6QXBwbGljYXRpb246Om5ldygpIHsKICAgICAgICBPayh3KSA9PiBhcHAgPSB3LAogICAgICAgIEVycihfKSA9PiBwYW5pYyEoIkNhbid0IGNyZWF0ZSB3aW5kb3chIiksCiAgICB9CiAgICBsZXQgZXJyID0gYXBwLnNldF9pY29uX2Zyb21fZmlsZSgKICAgICAgICAmIkM6XFxVc2Vyc1xccHJ6ZW1cXFByb2plY3RzXFxydXN0XFxzeXN0cmF5LXJzXFxyZXNvdXJjZXNcXHJ1c3QuaWNvIi50b19zdHJpbmcoKSwKICAgICk7CiAgICBpZiBlcnIuaXNfZXJyKCkgewogICAgICAgIHJldHVybiBlcnI7CiAgICB9CiAgICBsZXQgZXJyID0gYXBwLnNldF90b29sdGlwKCYiV2hhdGV2ZXIiLnRvX3N0cmluZygpKTsKICAgIGlmIGVyci5pc19lcnIoKSB7CiAgICAgICAgcmV0dXJuIGVycjsKICAgIH0KCiAgICBhcHAuYWRkX21lbnVfaXRlbSgiTGlzdCBhbGwgd2luZHdvcy4iLCB8X3wgewogICAgICAgIGxpc3RfYWxsX3dpbmRvd3MoKTsKICAgICAgICBPazo6PF8sIHN5c3RyYXk6OkVycm9yPigoKSkKICAgIH0pPzsKCiAgICAvLyB0b2RvOiBhZGRpbmcgbmV3IGl0ZW0gdG8gbWVudQogICAgLy8gYXBwLmFkZF9tZW51X2l0ZW0oIkFkZCBNZW51IEl0ZW0iLCB8d2luZG93fCB7CiAgICAvLyAgICAgd2luZG93LmFkZF9tZW51X2l0ZW0oIkludGVyaW9yIGl0ZW0iLCB8X3wgewogICAgLy8gICAgICAgICBwcmludGxuISgid2hhdCIpOwogICAgLy8gICAgICAgICBPazo6PF8sIHN5c3RyYXk6OkVycm9yPigoKSkKICAgIC8vICAgICB9KT87CiAgICAvLyAgICAgd2luZG93LmFkZF9tZW51X3NlcGFyYXRvcigpPzsKICAgIC8vICAgICBPazo6PF8sIHN5c3RyYXk6OkVycm9yPigoKSkKICAgIC8vIH0pPzsKCiAgICBhcHAuYWRkX21lbnVfc2VwYXJhdG9yKCk/OwoKICAgIGFwcC5hZGRfbWVudV9pdGVtKCJRdWl0IiwgfHdpbmRvd3wgewogICAgICAgIHdpbmRvdy5xdWl0KCk7CiAgICAgICAgT2s6OjxfLCBzeXN0cmF5OjpFcnJvcj4oKCkpCiAgICB9KT87CgogICAgcHJpbnRsbiEoIldhaXRpbmcgb24gbWVzc2FnZSEiKTsKICAgIGFwcC53YWl0X2Zvcl9tZXNzYWdlKCk/OwogICAgT2soKCkpCn0KAAAAAAAAAACzBAAAAAAAAAAAAAA",
							"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
						],
						[
							72,
							1,
							"revert",
							null,
							"CQAAAAAAAAAAAAAAAAAAAAAAAACzBAAAdXNlIGNyYXRlOjp3aW5hcGlfd3JhcHBlcjo6bGlzdF9hbGxfd2luZG93czsKCnB1YiBmbiBzaG93X3RyYXlfaWNvbigpIC0+IFJlc3VsdDwoKSwgc3lzdHJheTo6RXJyb3I+IHsKICAgIGxldCBtdXQgYXBwOwogICAgbWF0Y2ggc3lzdHJheTo6QXBwbGljYXRpb246Om5ldygpIHsKICAgICAgICBPayh3KSA9PiBhcHAgPSB3LAogICAgICAgIEVycihfKSA9PiBwYW5pYyEoIkNhbid0IGNyZWF0ZSB3aW5kb3chIiksCiAgICB9CiAgICBsZXQgZXJyID0gYXBwLnNldF9pY29uX2Zyb21fZmlsZSgKICAgICAgICAmIkM6XFxVc2Vyc1xccHJ6ZW1cXFByb2plY3RzXFxydXN0XFxzeXN0cmF5LXJzXFxyZXNvdXJjZXNcXHJ1c3QuaWNvIi50b19zdHJpbmcoKSwKICAgICk7CiAgICBpZiBlcnIuaXNfZXJyKCkgewogICAgICAgIHJldHVybiBlcnI7CiAgICB9CiAgICBsZXQgZXJyID0gYXBwLnNldF90b29sdGlwKCYiV2hhdGV2ZXIiLnRvX3N0cmluZygpKTsKICAgIGlmIGVyci5pc19lcnIoKSB7CiAgICAgICAgcmV0dXJuIGVycjsKICAgIH0KCiAgICBhcHAuYWRkX21lbnVfaXRlbSgiTGlzdCBhbGwgd2luZHdvcy4iLCB8X3wgewogICAgICAgIGxpc3RfYWxsX3dpbmRvd3MoKTsKICAgICAgICBPazo6PF8sIHN5c3RyYXk6OkVycm9yPigoKSkKICAgIH0pPzsKCiAgICAvLyB0b2RvOiBhZGRpbmcgbmV3IGl0ZW0gdG8gbWVudQogICAgLy8gYXBwLmFkZF9tZW51X2l0ZW0oIkFkZCBNZW51IEl0ZW0iLCB8d2luZG93fCB7CiAgICAvLyAgICAgd2luZG93LmFkZF9tZW51X2l0ZW0oIkludGVyaW9yIGl0ZW0iLCB8X3wgewogICAgLy8gICAgICAgICBwcmludGxuISgid2hhdCIpOwogICAgLy8gICAgICAgICBPazo6PF8sIHN5c3RyYXk6OkVycm9yPigoKSkKICAgIC8vICAgICB9KT87CiAgICAvLyAgICAgd2luZG93LmFkZF9tZW51X3NlcGFyYXRvcigpPzsKICAgIC8vICAgICBPazo6PF8sIHN5c3RyYXk6OkVycm9yPigoKSkKICAgIC8vIH0pPzsKCiAgICBhcHAuYWRkX21lbnVfc2VwYXJhdG9yKCk/OwoKICAgIGFwcC5hZGRfbWVudV9pdGVtKCJRdWl0IiwgfHdpbmRvd3wgewogICAgICAgIHdpbmRvdy5xdWl0KCk7CiAgICAgICAgT2s6OjxfLCBzeXN0cmF5OjpFcnJvcj4oKCkpCiAgICB9KT87CgogICAgcHJpbnRsbiEoIldhaXRpbmcgb24gbWVzc2FnZSEiKTsKICAgIGFwcC53YWl0X2Zvcl9tZXNzYWdlKCk/OwogICAgT2soKCkpCn0KAAAAAAAAAACzBAAAAAAAAAAAAAAAAAAAAAAAALMEAAAAAAAAAAAAAAAAAAAAAAAAswQAAAAAAAAAAAAAAAAAAAAAAACzBAAAAAAAAAAAAAAAAAAAAAAAALMEAAAAAAAAAAAAAAAAAAAAAAAAswQAAAAAAAAAAAAAAAAAAAAAAACzBAAAAAAAAAAAAAAAAAAAAAAAALMEAAAAAAAAAAAAAA",
							"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAgAAAAAAAKcCAAAAAAAAAAAAAAAA8L8"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/C++11/C++11.sublime-build",
							""
						],
						[
							"Packages/C++11/C++11.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++11/C++11.sublime-build",
						"Run"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"package up",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"rust run",
						"Build With: RustEnhanced - Run"
					],
					[
						"rust",
						"Build With: RustEnhanced - Run"
					],
					[
						"remove packa",
						"Package Control: Remove Package"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"origami des",
						"Origami: Destroy Current Pane"
					],
					[
						"open repo",
						"Sublime Merge: Open Repository"
					],
					[
						"right",
						"Origami: Create Pane with File on the Right"
					],
					[
						"list ",
						"Package Control: List Packages"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove ",
						"Package Control: Remove Package"
					],
					[
						"rain",
						"RainbowBrackets: make rainbow"
					],
					[
						"fmt",
						"RustFmt: Format Buffer"
					],
					[
						"below",
						"Origami: Create Pane Below"
					],
					[
						"neovi",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"synta",
						"Set Syntax: Python"
					],
					[
						"clang",
						"Clang Format: Select Style"
					],
					[
						"previe",
						"Markdown Preview: Preview in Browser"
					],
					[
						"format",
						"Clang Format: Select Style"
					],
					[
						"set syn c++",
						"Set Syntax: C++"
					],
					[
						"new ",
						"ANF: New File"
					],
					[
						"install pac",
						"Package Control: Install Package"
					],
					[
						"merge",
						"Sublime Merge: Open Repository"
					],
					[
						"remove",
						"Remove Selected Whitespace"
					],
					[
						"install ",
						"Package Control: Install Package"
					],
					[
						"rename",
						"Rename File"
					],
					[
						"copy",
						"Copy Filepath With Line Numbers"
					],
					[
						"blame",
						"Sublime Merge: Blame File"
					],
					[
						"open repos",
						"Sublime Merge: Open Repository"
					],
					[
						"open",
						"Sublime Merge: Open Repository"
					],
					[
						"sublime mer",
						"Sublime Merge: Open Repository"
					],
					[
						"json",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"set syntax json",
						"Set Syntax: JSON Key-Value"
					],
					[
						"isntall pac",
						"Package Control: Install Package"
					],
					[
						"install pack",
						"Package Control: Install Package"
					],
					[
						"list",
						"Package Control: List Packages"
					],
					[
						"you",
						"YouCompleteMe: Edit settings"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"theme",
						"Material Theme: Configuration"
					],
					[
						"toggle",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"syntac c++",
						"Set Syntax: C++11"
					],
					[
						"packages",
						"Package Control: List Packages"
					],
					[
						"set book",
						"SublimeBookmarks: Toggle Current Line"
					],
					[
						"repos",
						"Sublime Merge: Open Repository"
					],
					[
						"open rep",
						"Sublime Merge: Open Repository"
					],
					[
						"rena",
						"Rename File"
					],
					[
						"TabNine",
						"TabNine: Open Configuration"
					],
					[
						"tabnin",
						"TabNine: Open Configuration"
					],
					[
						"ocnifg",
						"TabNine: Open Configuration"
					],
					[
						"setting",
						"Preferences: Settings"
					],
					[
						"forma",
						"Clang Format: Format Selection"
					],
					[
						"remove paca",
						"Package Control: Remove Package"
					],
					[
						"install p",
						"Package Control: Install Package"
					],
					[
						"confi",
						"Material Theme: Configuration"
					],
					[
						"mat",
						"Material Theme: Activate theme"
					],
					[
						"rmeov",
						"Package Control: Remove Package"
					],
					[
						"intal",
						"Package Control: Install Package"
					],
					[
						"tab",
						"TabNine: Open Configuration"
					],
					[
						"list packa",
						"Package Control: List Packages"
					],
					[
						"neovin",
						"Toggle NeoVintageous"
					],
					[
						"renam",
						"Rename File"
					],
					[
						"copy r",
						"Copy Reference"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"renamee",
						"Rename File"
					],
					[
						"neo",
						"NeoVintageous: Changelog"
					],
					[
						"toggl",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"togg",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"to",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"open ",
						"Sublime Merge: Open Repository"
					],
					[
						"synta c",
						"Set Syntax: C"
					],
					[
						"tog",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"packa",
						"Package Control: Remove Package"
					],
					[
						"synta power",
						"Set Syntax: PowerShell"
					],
					[
						"mer open",
						"Sublime Merge: Open Repository"
					],
					[
						"isntall ",
						"Package Control: Advanced Install Package"
					],
					[
						"isntall pa",
						"Package Control: Install Package"
					],
					[
						"blame file",
						"Sublime Merge: Blame File"
					],
					[
						"toggle n",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"synt c++",
						"Set Syntax: C++"
					],
					[
						"toggle ",
						"NeoVintageous: Toggle CTRL keys"
					],
					[
						"git blm",
						"Git: Blame"
					],
					[
						"install packa",
						"Package Control: Install Package"
					],
					[
						"isntall pack",
						"Package Control: Install Package"
					],
					[
						"rmeove packa",
						"Package Control: Remove Package"
					],
					[
						"ren",
						"Rename File"
					],
					[
						"keyb",
						"Preferences: Key Bindings"
					],
					[
						"copyname",
						"Copy Filepath With Line Numbers"
					],
					[
						"plan",
						"PlantUmlDiagrams: Continually Generate Diagram"
					],
					[
						"wra",
						"Word Wrap: Toggle"
					],
					[
						"wrap",
						"Word Wrap: Toggle"
					],
					[
						"package ",
						"Package Control: Remove Package"
					],
					[
						"cscop",
						"Cscope: Rebuild database"
					],
					[
						"toggle hex",
						"HexViewer: Toggle Hex View"
					],
					[
						"intall",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"isntall",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 368.0,
				"history":
				[
					"TabNine::version",
					"TabNine:version",
					"tabinene:version",
					"import os; [(os.path.dirname(file)[len('Packages/'):], sublime.decode_value(sublime.load_resource(file))['url']) for file in sublime.find_resources('package-metadata.json')]"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/C/Users/przem/Projects/rust/rwm"
			],
			"file_history":
			[
				"/C/Users/przem/Projects/rust/rwm/target/debug/build/bindings-d17650f45e4bd9cf/out/windows.rs",
				"/C/Users/przem/Projects/rust/rwm/bindings/build.rs",
				"/C/Users/przem/AppData/Local/Packages/Microsoft.WindowsTerminalPreview_8wekyb3d8bbwe/LocalState/settings.json",
				"/C/Users/przem/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1",
				"/C/Users/przem/Desktop/New Text Document.json",
				"/C/Users/przem/Projects/rust/rwm/src/winapi_wrapper.rs",
				"/C/Users/przem/Projects/rust/rwm/target/debug/build/bindings-13028fb91a5ee5fc/out/windows.rs",
				"/C/Users/przem/Projects/rust/rwm/Cargo.toml",
				"/C/Users/przem/Projects/rust/rwm/bindings/Cargo.toml",
				"/C/Users/przem/Projects/rust/rwm/bindings/src/lib.rs",
				"/C/Users/przem/Projects/rust/rwm/src/tray_icon.rs",
				"/C/Users/przem/Projects/rust/rwm/src/main.rs",
				"/C/Users/przem/Projects/rust/rwm/bindings/target/debug/build/bindings-a57180432aa194db/out/windows.rs",
				"/C/Users/przem/Projects/dotfiles/windows/update.ps1",
				"/C/Users/przem/Projects/rust/rwm/.github/workflows/rust.yml",
				"/C/Users/przem/OneDrive/Dokumente/dieta/lista_zakupów_do_środy.txt",
				"/C/Users/przem/OneDrive/Dokumente/dieta/lista_zakupów_od_środy.txt",
				"/c/Users/przem/Projects/rust/rwm/target/debug/build/bindings-0b5290a4e1d76f8e/out/windows.rs",
				"/C/Users/przem/.cargo/registry/src/github.com-1ecc6299db9ec823/windows-0.8.0/src/lib.rs",
				"/C/Users/przem/.rustup/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/src/rust/library/core/src/convert/mod.rs",
				"/C/Users/przem/.rustup/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/src/rust/library/core/src/mem/mod.rs",
				"/C/Users/przem/Projects/rust/rwm/target/debug/build/bindings-0b5290a4e1d76f8e/out/windows.rs",
				"/C/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/dwmapi.h",
				"/C/Users/przem/.neovintageousrc",
				"/C/Users/przem/AppData/Roaming/Mozilla/Firefox/Profiles/sueea553.default-release/chrome/userChrome.css",
				"/C/Users/przem/Google Drive/documents/Firefox/OneTab.exported",
				"/C/Users/przem/Projects/rwm/cpp/build/qml/main.qml",
				"/C/Users/przem/Projects/rwm/src/main.rs",
				"/C/Users/przem/Projects/rwm/cpp/main.cpp",
				"/C/ProgramData/chocolatey/lib/gstreamer-devel/gstreamer-devel.nuspec",
				"/C/ProgramData/chocolatey/logs/chocolatey.log",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.clang-format",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.github/workflows/continuous_integration.yml",
				"/C/Users/PrzemyslawPorebski/Downloads/Program.txt",
				"/C/Users/PrzemyslawPorebski/Downloads/Rozmowa.cmd",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/ComClient.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/Sentinel.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/ComClient.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/ComClient-internal.h",
				"/C/Users/PrzemyslawPorebski/AppData/Local/Grandperspective/Sentinel/sentinel.settings.json",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/alpha_access/AlphaConnectionTests.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/gtags.files",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaConnection.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaConnection.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaStatemachine.scxml",
				"/C/Users/PrzemyslawPorebski/Projects/dotfiles/windows/build_gtags.cmd",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/vcpkg.txt",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/CTags/Default.sublime-keymap",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/Sentinel.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/qmlExtracted/main.qml",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaHttpDriver.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/GigECamera.cpp",
				"/C/Users/PrzemyslawPorebski/AppData/Local/Packages/Microsoft.WindowsTerminalPreview_8wekyb3d8bbwe/LocalState/settings.json",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/DatabaseConnection.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Scan.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Toxel.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/CMakeLists.txt",
				"//wsl$/Ubuntu-20.04/home/przemo/Projects/26158053.1",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.gitignore",
				"/C/Users/PrzemyslawPorebski/Projects/hello_github_action/.github/workflows/cmake.yml",
				"/C/Users/PrzemyslawPorebski/Projects/HelloWorld/.github/workflows/build_cmake.yml",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Merge/Packages/User/Default (Windows).sublime-keymap",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanArea.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanArea.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanAreaContainer.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanAreaContainer.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/DatabaseConnection.h",
				"/C/Users/PrzemyslawPorebski/Projects/builds/install/release/opusRsTimesFile.log",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/User/clang_format.sublime-settings",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/Clang Format/clang_format.sublime-settings",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"/C/Users/PrzemyslawPorebski/AppData/Roaming/Sublime Text 3/Packages/Clang Format/Default (Windows).sublime-keymap",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/CameraControl.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/CameraControl.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/builds/install/release/opusRsTimesFile",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuControl-internal.h",
				"//wsl$/kali-linux/home/przemo/.vimrc",
				"//wsl$/Ubuntu-20.04/home/przemo/.config/nvim/init.vim",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/modules/PtuControlTest.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuDriver.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/CMakeLists.txt.user",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/sentinel-fluent-bit-dev/Readme.md",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuControl.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/PtuControl.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Spectrum.cpp",
				"/C/Users/PrzemyslawPorebski/PycharmProjects/pythonProject/main.py",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/TimestampToxelCollator.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/AqTimestamper.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/AqTimestamper.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Spectrum.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/model/PtuPositionsContainerTest.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/PtuPositionsContainer.cpp",
				"/C/Users/PrzemyslawPorebski/Documents/n53sv_Przemek.rdp",
				"/C/Users/PrzemyslawPorebski/Documents/PowerShell/Microsoft.PowerShell_profile.ps1",
				"/C/Users/PrzemyslawPorebski/_vimrc",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/PtuPositionsContainer.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/qmlExtracted/PtuControl.qml",
				"/C/Users/PrzemyslawPorebski/Projects/mlcourse.ai/run_docker_jupyter_windows.cmd",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/jsonstruct/Timestamp.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/presenter/ScanProxy.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/presenter/ScanProxy.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanBackground.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/ScanBackground.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Toxel.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/Scan.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/MsTimestamp.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/model/MsTimestamp.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/qmlExtracted/SidebarDirectControl.qml",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/Sentinel_AlphaConnectino_coordination.txt",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/helpers/TimeConversion.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/dotfiles/NordVPN_Polish_servers.txt",
				"/C/Users/PrzemyslawPorebski/Stuff/LassPass.csv",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/SentinelTest.cpp",
				"/C/Users/PrzemyslawPorebski/AppData/Local/Grandperspective/Sentinel/subl",
				"/C/Users/PrzemyslawPorebski/Projects/opus-rs-testclient/Unit1.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/opus-rs-alpha/OpagIFM.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/unitTests/ProjectionTest.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaCalibrationData.h",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/alpha_access/AlphaCalibrationData.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/dotfiles/windows/choco_local.list",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/modules/GeDetekt.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/vcpkg/buildtrees/opencv4/src/4.1.1-fb9e10326a/modules/core/src/matrix.cpp",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/.gitbugtraq",
				"/C/Users/PrzemyslawPorebski/Projects/sentinel/sentinel.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr27.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr19.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr22.log",
				"/C/Users/PrzemyslawPorebski/Projects/dump/cold_temp_299.75_PARAMETERS_nr13.log"
			],
			"find":
			{
				"height": 24.0
			},
			"find_in_files":
			{
				"height": 136.0,
				"where_history":
				[
					"C:\\Users\\przem\\Projects\\rust\\rwm",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"C:\\\\Users\\\\%USERNAME%",
					"register_keyboard_clicks",
					"buf1",
					"HRESULT",
					"Windows::Win32::",
					"Waiting on message",
					"Waiting on message!",
					"Waiting on message!\nerror: process",
					"buf",
					"MA_NOACTIVATE",
					"        ",
					"GetClassNameA"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": true,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Users/przem/Projects/rust/rwm/src/main.rs",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 228,
								"regions":
								{
								},
								"selection":
								[
									[
										228,
										228
									]
								],
								"settings":
								{
									"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Users/przem/Projects/rust/rwm/src/winapi_wrapper.rs",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10851,
								"regions":
								{
								},
								"selection":
								[
									[
										2563,
										2563
									]
								],
								"settings":
								{
									"_nv_visual_sel_mode": "mode_visual",
									"color_scheme": "Packages/Color Scheme - Default/Mariana.sublime-color-scheme",
									"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/C/Users/przem/Projects/rust/rwm/src/tray_icon.rs",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1203,
								"regions":
								{
								},
								"selection":
								[
									[
										649,
										649
									]
								],
								"settings":
								{
									"color_scheme": "Packages/Color Scheme - Default/Mariana.sublime-color-scheme",
									"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 24.0
			},
			"input":
			{
				"height": 55.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": false,
			"output.ECC":
			{
				"height": 334.0
			},
			"output.exec":
			{
				"height": 390.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.hex_viewer_inspector":
			{
				"height": 103.0
			},
			"output.unsaved_changes":
			{
				"height": 324.0
			},
			"pinned_build_system": "",
			"position": "0,0,1,-1,-1,-1,-1,1577,1913,0,3847,d8953c22d64d9a4eb996c041628c50f8",
			"project": "rwm.sublime-project",
			"replace":
			{
				"height": 44.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"winap",
						"src\\winapi_wrapper.rs"
					],
					[
						"window",
						"target\\debug\\build\\bindings-d17650f45e4bd9cf\\out\\windows.rs"
					],
					[
						"windows.rs",
						"target\\debug\\build\\bindings-d17650f45e4bd9cf\\out\\windows.rs"
					],
					[
						"win",
						"src\\winapi_wrapper.rs"
					],
					[
						"tray",
						"src\\tray_icon.rs"
					],
					[
						"main.rs",
						"src\\main.rs"
					],
					[
						"",
						".clang-format"
					],
					[
						"comclien",
						"modules\\ComClient.h"
					],
					[
						"gitign",
						".gitignore"
					],
					[
						"client",
						"modules\\ComClient.cpp"
					],
					[
						"cam",
						"modules\\GigECamera.cpp"
					],
					[
						"readm",
						"sentinel-fluent-bit-dev\\Readme.md"
					],
					[
						"cmake",
						"CMakeLists.txt"
					],
					[
						"ptuconto",
						"modules\\PtuControl.cpp"
					],
					[
						"ptucontte",
						"unitTests\\modules\\PtuControlTest.cpp"
					],
					[
						"ptudriver",
						"modules\\PtuDriver.cpp"
					],
					[
						"comclient",
						"modules\\ComClient.cpp"
					],
					[
						"PtuControl",
						"modules\\PtuControl.h"
					],
					[
						"ptucon",
						"modules\\PtuControl.h"
					],
					[
						"unitTests/model/PtuPositionsContainerTest.cpp",
						"unitTests\\model\\PtuPositionsContainerTest.cpp"
					],
					[
						"ptu",
						"modules\\PtuControl.h"
					],
					[
						"alpha",
						"alpha_access\\AlphaConnection.cpp"
					],
					[
						"aqtim",
						"modules\\AqTimestamper.cpp"
					],
					[
						"aqtime",
						"modules\\AqTimestamper.cpp"
					],
					[
						"time",
						"helpers\\TimeConversion.cpp"
					],
					[
						"com",
						"modules\\ComClient.cpp"
					],
					[
						"sentinelTest",
						"unitTests\\SentinelTest.cpp"
					],
					[
						"comclie in",
						"modules\\ComClient-internal.h"
					],
					[
						"comclie",
						"modules\\ComClient.cpp"
					],
					[
						"alpha test",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"alphatest",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"http",
						"alpha_access\\AlphaHttpDriver.cpp"
					],
					[
						"gedete",
						"modules\\GeDetekt.cpp"
					],
					[
						"comclientin",
						"modules\\ComClient-internal.h"
					],
					[
						"comcli",
						"modules\\ComClient.cpp"
					],
					[
						"gede",
						"modules\\GeDetekt.cpp"
					],
					[
						"pha_access/AlphaConnectionTests.cpp ",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"AlphaStatemachine.scxml",
						"alpha_access\\AlphaStatemachine.scxml"
					],
					[
						"sentine",
						"Sentinel.cpp"
					],
					[
						"comclient_te",
						"integrationTests\\ComClient_test.cpp"
					],
					[
						"AlphaConnection.cpp",
						"alpha_access\\AlphaConnection.cpp"
					],
					[
						"AlphaConnectionTe.",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"AlphaStatemachine.scxml ",
						"alpha_access\\AlphaStatemachine.scxml"
					],
					[
						"comclien inte",
						"modules\\ComClient-internal.h"
					],
					[
						"alphacali",
						"alpha_access\\AlphaCalibrationData.h"
					],
					[
						"ab",
						"alpha_access\\AbstractAlphaConnection.h"
					],
					[
						"AlphaConnectionTests.cpp",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"gigecam",
						"modules\\GigECamera.cpp"
					],
					[
						"ge",
						"modules\\GeDetekt.cpp"
					],
					[
						"drivermock",
						"commonTest\\mocks\\AlphaHttpDriverMock.h"
					],
					[
						"alphaconn test",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"alphacon",
						"alpha_access\\AlphaConnection.cpp"
					],
					[
						"alphahtt test",
						"unitTests\\alpha_access\\AlphaHttpDriverTests.cpp"
					],
					[
						"alphahttp",
						"alpha_access\\AlphaHttpDriver.cpp"
					],
					[
						"alphahtt",
						"alpha_access\\AlphaHttpDriver.cpp"
					],
					[
						"Toxel_DatabaseTest.cpp",
						"integrationTests\\Toxel_DatabaseTest.cpp"
					],
					[
						"GeDetektToxel.h",
						"data\\GeDetektToxel.h"
					],
					[
						"model/toxe",
						"model\\Toxel.cpp"
					],
					[
						"GeDetekt.cpp",
						"modules\\GeDetekt.cpp"
					],
					[
						"unitTests/alpha_access/AlphaConnectionTests.cpp",
						"unitTests\\alpha_access\\AlphaConnectionTests.cpp"
					],
					[
						"unitTests/alpha_access/AlphaConnectionHttpPagesReplies.h",
						"unitTests\\alpha_access\\AlphaConnectionHttpPagesReplies.h"
					],
					[
						"unitTests/alpha_access/AlphaConnectionConfigTests.cpp",
						"unitTests\\alpha_access\\AlphaConnectionConfigTests.cpp"
					],
					[
						"modules/ComClient.cpp",
						"modules\\ComClient.cpp"
					],
					[
						"modules/AqTimestamper.cpp",
						"modules\\AqTimestamper.cpp"
					],
					[
						"integrationTests/AlphaConnectionComClient_Test.cpp",
						"integrationTests\\AlphaConnectionComClient_Test.cpp"
					],
					[
						"commonTest/mocks/AlphaConnectionMock.h",
						"commonTest\\mocks\\AlphaConnectionMock.h"
					],
					[
						"alpha_access/AlphaConnectionConfig.cpp",
						"alpha_access\\AlphaConnectionConfig.cpp"
					],
					[
						"AlphaConnection",
						"alpha_access\\AlphaConnection.h"
					],
					[
						"NetworkAccessManagerMock.cpp",
						"unitTests\\mocks\\NetworkAccessManagerMock.cpp"
					],
					[
						"test-main.cpp",
						"test-main.cpp"
					],
					[
						"gie",
						"modules\\GigECamera.cpp"
					],
					[
						"AbstractNetworkAccessManager.h",
						"alpha_access\\AbstractNetworkAccessManager.h"
					],
					[
						"AlphaConnectionConfig.h",
						"alpha_access\\AlphaConnectionConfig.h"
					],
					[
						"comclient-inte",
						"modules\\ComClient-internal.h"
					],
					[
						"gicam",
						"modules\\GigECamera.cpp"
					],
					[
						"ComClient.cpp",
						"modules\\ComClient.cpp"
					],
					[
						"ComClient-internal.h",
						"modules\\ComClient-internal.h"
					],
					[
						"GeDetekt.h",
						"modules\\GeDetekt.h"
					],
					[
						"ComClient_test.cpp",
						"integrationTests\\ComClient_test.cpp"
					],
					[
						"alpha_access/IQNetworkReplyWrapper.h",
						"alpha_access\\IQNetworkReplyWrapper.h"
					],
					[
						"unitTests\\AlphaConnectionTests.cpp",
						"alpha_access\\unitTests\\AlphaConnectionTests.cpp"
					],
					[
						"ComClient.h",
						"modules\\ComClient.h"
					],
					[
						"DatabaseConnection.cpp",
						"modules\\DatabaseConnection.cpp"
					],
					[
						"gedetect",
						"alpha_access\\GeDetekt.cpp"
					],
					[
						"camera",
						"modules\\GigECamera.cpp"
					],
					[
						"SafeArrayAccess.cpp",
						"helpers\\SafeArrayAccess.cpp"
					],
					[
						"dedetekt",
						"modules\\GeDetekt.h"
					],
					[
						"SpherePosition.h",
						"model\\SpherePosition.h"
					],
					[
						"sentinelstatemachine",
						"SentinelStateMachine.scxml"
					],
					[
						"QNetworkAccessManagerDummyMock.h",
						"alpha_access\\unitTests\\mocks\\QNetworkAccessManagerDummyMock.h"
					],
					[
						"iqnet",
						"alpha_access\\IQNetworkAccessManagerWrapper.h"
					],
					[
						"alpha_access\\AlphaConnection.cpp",
						"alpha_access\\AlphaConnection.cpp"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"C:\\Users\\przem\\OneDrive\\Dokumente\\dieta\\lista_zakupów.sublime-project"
					],
					[
						"sen",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel.sublime-project"
					],
					[
						"entin",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel.sublime-project"
					],
					[
						"rwm",
						"C:\\Users\\przem\\Projects\\sublime_projects\\rwm.sublime-project"
					],
					[
						"test",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\testserver-configuration.sublime-project"
					],
					[
						"pyli",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel-pylib.sublime-project"
					],
					[
						"pylib",
						"C:\\Users\\PrzemyslawPorebski\\Projects\\sublime_projects\\sentinel-pylib.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 91.0,
				"last_filter": "savetodb",
				"selected_items":
				[
					[
						"savetodb",
						"saveToDb"
					],
					[
						"calibrateWithCollectedData",
						"calibrateWithCollectedData"
					],
					[
						"calibrationDataCollected ",
						"calibrationDataCollected"
					],
					[
						"calibrationDataCollected",
						"calibrationDataCollected"
					],
					[
						"dump",
						"dumpMeasurementData"
					],
					[
						"isMeasurementFull",
						"isMeasurementFull"
					],
					[
						"blackbody",
						"requestReadBlackbodyPosition"
					],
					[
						"isclo",
						"isDoubleClose"
					],
					[
						"startComClient",
						"startComClient"
					],
					[
						"startge",
						"startGeDetekt"
					],
					[
						"returnif",
						"ReturnIfmIp"
					],
					[
						"gedete",
						"GeDetekt"
					]
				],
				"width": 574.0
			},
			"selected_group": 0,
			"settings":
			{
				"_vintageous_last_buffer_search": "on_mouse_event",
				"_vintageous_last_buffer_search_command": "nv_vi_star",
				"_vintageous_last_char_search": "=",
				"_vintageous_last_char_search_command": "vi_t",
				"_vintageous_reset_during_init": true
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 206.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 506,
			"workspace_name": "/C/Users/przem/Projects/sublime_projects/rwm.sublime-workspace"
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/C/Users/przem/Projects/sublime_projects/rwm.sublime-workspace",
			"/C/Users/przem/OneDrive/Dokumente/dieta/lista_zakupów.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/sentinel.sublime-workspace",
			"/C/Users/przem/Projects/sublime_projects/orst_ubuntu.sublime-workspace",
			"/C/Users/przem/Projects/sublime_projects/wmm.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/scanfeld-pylib.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/sentinel-pylib.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/dotfiles.sublime-workspace",
			"/C/Users/przem/Projects/sublime_projects/switcheroo.sublime-workspace",
			"/C/Users/przem/Projects/sublime_projects/PlotJuggler.sublime-workspace",
			"/C/Users/przem/Projects/sublime_projects/servo.sublime-workspace",
			"/C/Users/przem/Projects/sublime_projects/godot.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/AqTimestamper.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/arduino_libraries.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/testserver-configuration.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/HelloWorld_githubActions.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/test-ci.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/onetab.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/mlcourse.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/esp32_sdk.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/opus-rs.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Stuff/Mateusz/Mateusz.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/sentinel-pulib.sublime-workspace",
			"/C/Users/PrzemyslawPorebski/Projects/sublime_projects/opus-rs-testclient.sublime-workspace"
		]
	}
}
